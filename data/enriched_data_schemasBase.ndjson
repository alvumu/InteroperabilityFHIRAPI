{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Patient", "type": "object", "description": "This schema represents demographic and administrative information about a patient receiving healthcare services. The Patient resource organizes and manages information related to an individual's identity, contacts, birth details, and healthcare relationships.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Patient.identifier": {"type": "string", "description": "A unique identifier for the patient, typically assigned by a healthcare organization to ensure distinct records for each patient."}, "Patient.active": {"type": "boolean", "description": "Indicates if the patient record is active in the system. Inactive records generally reflect patients no longer receiving care or who haven't been seen for a period."}, "Patient.name": {"type": "string", "description": "Full name of the patient, including given names, family name, and prefixes or suffixes if any, crucial for patient identification."}, "Patient.telecom": {"type": "string", "description": "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted."}, "Patient.gender": {"type": "string", "description": "The administrative gender of the patient, used for record-keeping and clinical purposes, not necessarily their gender identity."}, "Patient.birthDate": {"type": "string", "description": "The birth date of the patient, formatted as YYYY-MM-DD, used for age calculations and clinical eligibility."}, "Patient.deceased": {"type": "string", "description": "Indicates if the patient is deceased; can be a boolean or a datetime string showing time of death for continuity in health records."}, "Patient.address": {"type": "string", "description": "An address for the individual."}, "Patient.maritalStatus": {"type": "string", "description": "Marital or civil status of the patient, relevant for social and demographic information within health records."}, "Patient.multipleBirth": {"type": "string", "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)."}, "Patient.photo": {"type": "string", "description": "Image of the patient."}, "Patient.contact": {"type": "object", "description": "Contact information for individuals associated with the patient (e.g., emergency contact, caregiver), aiding in continuity of care and emergency communication.", "properties": {"Patient.contact.relationship": {"type": "string", "description": "The nature of the relationship between the patient and the contact person"}, "Patient.contact.name": {"type": "string", "description": "A name associated with the contact person"}, "Patient.contact.telecom": {"type": "string", "description": "A contact detail for the person, e.g. a telephone number or an email address."}, "Patient.contact.address": {"type": "string", "description": "Address for the contact person"}, "Patient.contact.gender": {"type": "string", "description": "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes."}, "Patient.contact.organization": {"type": "string", "description": "Organization on behalf of which the contact is acting or for which the contact is working"}, "Patient.contact.period": {"type": "string", "description": "The period during which this contact person or organization is valid to be contacted relating to this patient"}}}, "Patient.communication": {"type": "object", "description": "Languages the patient prefers for healthcare communication, ensuring that the patient can understand health-related communications.", "properties": {"Patient.communication.language": {"type": "string", "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. 'en' for English, or 'en-US' for American English versus 'en-AU' for Australian English"}, "Patient.communication.preferred": {"type": "boolean", "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level)"}}}, "Patient.generalPractitioner": {"type": "string", "description": "The primary care provider or general practitioner responsible for coordinating the patient's healthcare services."}, "Patient.managingOrganization": {"type": "string", "description": "Organization that is the custodian of the patient record."}, "Patient.link": {"type": "object", "description": "Link to a Patient or RelatedPerson resource that concerns the same actual individual.", "properties": {"Patient.link.other": {"type": "string", "description": "Link to a Patient or RelatedPerson resource that concerns the same actual individual."}, "Patient.link.type": {"type": "string", "description": "The type of link between this patient resource and another patient resource."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Encounter", "type": "object", "description": "This schema captures an interaction between a patient and healthcare provider(s) for healthcare service(s) or assessing health status. Encounter records actual activities that occurred in contrast to appointments, which are planned activities.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Encounter.identifier": {"type": "string", "description": "An identifier for the encounter, ensuring each encounter is distinct in the health record system."}, "Encounter.status": {"type": "string", "description": "Current state of the encounter (e.g., ongoing, finished), not necessarily reflecting the patient's condition."}, "Encounter.class": {"type": "string", "description": "The classification of the encounter (e.g., inpatient, outpatient, emergency), providing context to the type of healthcare provided."}, "Encounter.priority": {"type": "string", "description": "Indicates the urgency of the encounter. Examples are 'routine', 'urgent', 'asap', or 'stat'. This helps prioritize patient care and resource allocation."}, "Encounter.type": {"type": "string", "description": "Specific type of encounter, such as email consultation, rehabilitation, or surgical day-care."}, "Encounter.serviceType": {"type": "string", "description": "Broad service category provided during the encounter, such as cardiology or general practice."}, "Encounter.subject": {"type": "string", "description": "Reference to the patient or group involved in the encounter. In most cases, this will be a patient, but in some scenarios (like group therapy), it may involve a group."}, "Encounter.subjectStatus": {"type": "string", "description": "Tracks the patient's status within the encounter. Indicates if the patient has arrived, departed, been triaged, or is waiting. Useful for managing patient flow and wait times."}, "Encounter.episodeOfCare": {"type": "string", "description": "Reference to the EpisodeOfCare resource that this encounter is part of. Helps group related encounters under a single episode of care for conditions like chronic diseases."}, "Encounter.basedOn": {"type": "string", "description": "Reference to the request that initiated this encounter, such as a referral or procedure request. Links the encounter to prior planning."}, "Encounter.careTeam": {"type": "string", "description": "References to the CareTeam resources involved in the encounter. Includes all individuals and organizations assigned to participate, capturing roles and responsibilities."}, "Encounter.partOf": {"type": "string", "description": "Reference to another Encounter that this encounter is a part of, either administratively or in time. Useful for nested encounters, like a surgery within a hospital stay."}, "Encounter.serviceProvider": {"type": "string", "description": "The organization primarily responsible for the encounter's services. May differ from the patient's primary organization if services are provided by an external entity."}, "Encounter.participant": {"type": "object", "description": "Details about individuals involved in the encounter.", "properties": {"Encounter.participant.type": {"type": "string", "description": "Role of the participant during the encounter, such as 'practitioner', 'nurse', 'family member', or 'translator'."}, "Encounter.participant.period": {"type": "string", "description": "The time period during which the participant was involved. May overlap with other participants and may not cover the entire encounter duration."}, "Encounter.participant.actor": {"type": "string", "description": "Reference to the individual participating in the encounter. Could be a practitioner, patient, or related person."}}}, "Encounter.appointment": {"type": "string", "description": "Reference to the Appointment resource that scheduled this encounter. Links the encounter to its scheduling information."}, "Encounter.virtualService": {"type": "string", "description": "Connection details for virtual services used during the encounter, such as telehealth sessions or conference calls."}, "Encounter.actualPeriod": {"type": "string", "description": "Actual start and end times for the encounter, allowing calculation of duration for service time tracking."}, "Encounter.plannedStartDate": {"type": "string", "description": "The planned start date/time of the encounter. Useful for appointments and admissions scheduling."}, "Encounter.plannedEndDate": {"type": "string", "description": "The planned end date/time of the encounter. Helps estimate length of stay and plan resource utilization."}, "Encounter.length": {"type": "string", "description": "Total duration of the encounter, excluding absences, which is vital for resource use tracking."}, "Encounter.reason": {"type": "object", "description": "Medical reasons expected to be addressed during the encounter.", "properties": {"Encounter.use": {"type": "string", "description": "Indicates how the reason should be used, such as 'chief complaint', 'health concern', or 'screening'."}, "Encounter.value": {"type": "string", "description": "Reason for the encounter, expressed as a code (e.g., ICD-10, SNOMED CT) or a reference to a Condition resource."}}}, "Encounter.diagnosis": {"type": "object", "description": "Diagnoses relevant to the encounter.", "properties": {"Encounter.diagnosis.condition": {"type": "string", "description": "Reference to a Condition resource or coded diagnosis associated with the encounter."}, "Encounter.diagnosis.use": {"type": "string", "description": "Role of the diagnosis within the encounter, such as 'admission', 'billing', or 'discharge' diagnosis."}}}, "Encounter.account": {"type": "string", "description": "References to Account resources used for billing the encounter. Links financial information to the clinical event."}, "Encounter.dietPreference": {"type": "string", "description": "Dietary preferences or restrictions reported by the patient, like 'vegetarian', 'gluten-free', or 'diabetic diet'. Important for inpatient care and meal planning."}, "Encounter.specialArrangement": {"type": "string", "description": "Special requests for the encounter, such as need for interpreter services, wheelchair access, or specific equipment."}, "Encounter.specialCourtesy": {"type": "string", "description": "Special courtesies provided to the patient, such as 'VIP', 'professional courtesy', or accommodations for dignitaries."}, "Encounter.admission": {"type": "object", "description": "Details about the hospital admission during which healthcare services are provided.", "properties": {"Encounter.admission.preAdmissionIdentifier": {"type": "string", "description": "Identifier for the patient prior to admission, such as a pre-admission number or external referral ID."}, "Encounter.admission.origin": {"type": "string", "description": "Location or organization from which the patient was admitted, like another hospital, clinic, or home."}, "Encounter.admission.admitSource": {"type": "string", "description": "Source of the admission, such as 'physician referral', 'transfer', 'emergency', or 'labor and delivery'."}, "Encounter.admission.reAdmission": {"type": "string", "description": "Indicates if the encounter is a re-admission related to a prior admission, often used for quality metrics."}, "Encounter.admission.destination": {"type": "string", "description": "Location or organization to which the patient is discharged, such as home, another hospital, or a rehabilitation facility."}, "Encounter.admission.dischargeDisposition": {"type": "string", "description": "Category of the discharge location, like 'home', 'skilled nursing facility', or 'deceased'."}}}, "Encounter.location": {"type": "object", "description": "Locations where the patient has been during the encounter.", "properties": {"Encounter.location.location": {"type": "string", "description": "Reference to the physical location where the patient was present, such as a hospital ward, clinic room, or bed."}, "Encounter.location.status": {"type": "string", "description": "Status of the patient's presence at the location. Values include 'planned', 'active', 'reserved', or 'completed'."}, "Encounter.location.form": {"type": "string", "description": "Type of location, specifying levels like 'bed', 'room', 'ward', to simplify messaging or queries."}, "Encounter.location.period": {"type": "string", "description": "Time period during which the patient was at the specified location. Helps track movement and duration."}}}}}, "table_attribute_name": {"type": "string", "description": "Name of the attribute in the input table being mapped to the FHIR attribute."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Procedure", "type": "object", "description": "An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy. This can be a quality or safety inspection for a location, organization, or device. This can be an accreditation procedure on a practitioner for licensing.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Procedure.identifier": {"type": "string", "description": "Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server."}, "Procedure.instantiatesCanonical": {"type": "string", "description": "The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure."}, "Procedure.instantiatesUri": {"type": "string", "description": "The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure."}, "Procedure.basedOn": {"type": "string", "description": "A reference to a resource that contains details of the request for this procedure."}, "Procedure.partOf": {"type": "string", "description": "A larger event of which this particular procedure is a component or step."}, "Procedure.status": {"type": "string", "description": "A code specifying the state of the procedure. Generally, this will be the in-progress or completed state."}, "Procedure.statusReason": {"type": "string", "description": "Captures the reason for the current state of the procedure."}, "Procedure.category": {"type": "string", "description": "A code that classifies the procedure for searching, sorting and display purposes (e.g. 'Surgical Procedure')."}, "Procedure.code": {"type": "string", "description": "The specific procedure that is performed. Use text if the exact nature of the procedure cannot be coded (e.g. 'Laparoscopic Appendectomy')."}, "Procedure.subject": {"type": "string", "description": "On whom or on what the procedure was performed. This is usually an individual human, but can also be performed on animals, groups of humans or animals, organizations or practitioners (for licensing), locations or devices (for safety inspections or regulatory authorizations). If the actual focus of the procedure is different from the subject, the focus element specifies the actual focus of the procedure."}, "Procedure.focus": {"type": "string", "description": "Who is the target of the procedure when it is not the subject of record only. If focus is not present, then subject is the focus. If focus is present and the subject is one of the targets of the procedure, include subject as a focus as well. If focus is present and the subject is not included in focus, it implies that the procedure was only targeted on the focus. For example, when a caregiver is given education for a patient, the caregiver would be the focus and the procedure record is associated with the subject (e.g. patient). For example, use focus when recording the target of the education, training, or counseling is the parent or relative of a patient."}, "Procedure.encounter": {"type": "string", "description": "The Encounter during which this Procedure was created or performed or to which the creation of this record is tightly associated."}, "Procedure.occurrence": {"type": "string", "description": "Estimated or actual date, date-time, period, or age when the procedure did occur or is occurring. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured."}, "Procedure.recorded": {"type": "string", "description": "The date the occurrence of the procedure was first captured in the record regardless of Procedure.status (potentially after the occurrence of the event)."}, "Procedure.recorder": {"type": "string", "description": "Individual who recorded the record and takes responsibility for its content."}, "Procedure.reported": {"type": "string", "description": "Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record. It may also indicate the source of the report."}, "Procedure.performer": {"type": "object", "description": "Indicates who or what performed the procedure and how they were involved.", "properties": {"Procedure.performer.function": {"type": "string", "description": "Distinguishes the type of involvement of the performer in the procedure. For example, surgeon, anaesthetist, endoscopist"}, "Procedure.performer.actor": {"type": "string", "description": "Indicates who or what performed the procedure."}, "Procedure.performer.onBehalfOf": {"type": "string", "description": "The Organization the Patient, RelatedPerson, Device, CareTeam, and HealthcareService was acting on behalf of."}, "Procedure.performer.period": {"type": "string", "description": "Time period during which the performer performed the procedure."}}}, "Procedure.location": {"type": "string", "description": "The location where the procedure actually happened. E.g. a newborn at home, a tracheostomy at a restaurant."}, "Procedure.reason": {"type": "string", "description": "The coded reason or reference why the procedure was performed. This may be a coded entity of some type, be present as text, or be a reference to one of several resources that justify the procedure."}, "Procedure.bodySite": {"type": "string", "description": "Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion"}, "Procedure.outcome": {"type": "string", "description": "The outcome of the procedure - did it resolve the reasons for the procedure being performed?"}, "Procedure.report": {"type": "string", "description": "This could be a histology result, pathology report, surgical report, etc."}, "Procedure.complication": {"type": "string", "description": "Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues."}, "Procedure.followUp": {"type": "string", "description": "If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used."}, "Procedure.note": {"type": "string", "description": "Any other notes and comments about the procedure."}, "Procedure.focalDevice": {"type": "object", "description": "A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.", "properties": {"Procedure.focalDevice.action": {"type": "string", "description": "The kind of change that happened to the device during the procedure."}, "Procedure.focalDevice.manipulated": {"type": "string", "description": "The device that was manipulated (changed) during the procedure."}}}, "Procedure.used": {"type": "string", "description": "Identifies medications, devices and any other substance used as part of the procedure."}, "Procedure.supportingInfo": {"type": "string", "description": "Other resources from the patient record that may be relevant to the procedure. The information from these resources was either used to create the instance or is provided to help with its interpretation. This extension should not be used if more specific inline elements or extensions are available."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Condition", "type": "object", "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "Condition.properties": {"identifier": {"type": "string", "description": "Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server."}, "Condition.clinicalStatus": {"type": "string", "description": "The clinical status of the condition."}, "Condition.verificationStatus": {"type": "string", "description": "The verification status to support the clinical status of the condition. The verification status pertains to the condition, itself, not to any specific condition attribute."}, "Condition.category": {"type": "string", "description": "A category assigned to the condition"}, "Condition.severity": {"type": "string", "description": "A subjective assessment of the severity of the condition as evaluated by the clinician."}, "Condition.code": {"type": "string", "description": "Identification of the condition, problem or diagnosis"}, "Condition.bodySite": {"type": "string", "description": "The anatomical location where this condition manifests itself"}, "Condition.subject": {"type": "string", "description": "Indicates the patient or group who the condition record is associated with."}, "Condition.encounter": {"type": "string", "description": "The Encounter during which this Condition was created or to which the creation of this record is tightly associated."}, "Condition.onset": {"type": "string", "description": "Estimated or actual date or date-time the condition began, in the opinion of the clinician"}, "Condition.abatement": {"type": "string", "description": "The date or estimated date that the condition resolved or went into remission. This is called 'abatement' because of the many overloaded connotations associated with 'remission' or 'resolution' - Some conditions, such as chronic conditions, are never really resolved, but they can abate."}, "Condition.recordedDate": {"type": "string", "description": "The recordedDate represents when this particular Condition record was created in the system, which is often a system-generated date."}, "Condition.participant": {"type": "object", "description": "Indicates who or what participated in the activities related to the condition and how they were involved.", "properties": {"Condition.participant.function": {"type": "string", "description": "Distinguishes the type of involvement of the actor in the activities related to the condition."}, "Condition.participant.actor": {"type": "string", "description": "Indicates who or what participated in the activities related to the condition."}}}, "Condition.stage": {"type": "object", "properties": {"Condition.stage.summary": {"type": "string", "description": "A simple summary of the stage such as 'Stage 3' or 'Early Onset'. The determination of the stage is disease-specific, such as cancer, retinopathy of prematurity, kidney diseases, Alzheimer's, or Parkinson disease."}, "Condition.stage.assessment": {"type": "string", "description": "Reference to a formal record of the evidence on which the staging assessment is based."}, "Condition.stage.type": {"type": "string", "description": "The kind of staging, such as pathological or clinical staging"}}}, "Condition.evidence": {"type": "string", "description": "Supporting evidence / manifestations that are the basis of the Condition's verification status, such as evidence that confirmed or refuted the condition."}, "Condition.note": {"type": "string", "description": "Additional information about the Condition. This is a general notes/comments entry for description of the Condition, its diagnosis and prognosis."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Medication", "type": "object", "description": "This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Medication.identifier": {"type": "string", "description": "Business identifier for this medication."}, "Medication.code": {"type": "string", "description": "A code (or set of codes) that specify this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems."}, "Medication.status": {"type": "string", "description": "A code to indicate if the medication is in active use"}, "Medication.marketingAuthorizationHolder": {"type": "string", "description": "The company or other legal entity that has authorization, from the appropriate drug regulatory authority, to market a medicine in one or more jurisdictions. Typically abbreviated MAH.Note: The MAH may manufacture the product and may also contract the manufacturing of the product to one or more companies (organizations)"}, "Medication.doseForm": {"type": "string", "description": "Describes the form of the item. Powder; tablets; capsule."}, "Medication.totalVolume": {"type": "string", "description": "When the specified product code does not infer a package size, this is the specific amount of drug in the product. For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.)."}, "Medication.ingredient": {"type": "object", "description": "Identifies a particular constituent of interest in the product.", "properties": {"Medication.ingredient.item": {"type": "string", "description": "The ingredient (substance or medication) that the ingredient.strength relates to. This is represented as a concept from a code system or described in another resource (Substance or Medication)"}, "isActive": {"type": "boolean", "description": "Indication of whether this ingredient affects the therapeutic action of the drug"}, "strength": {"type": "string", "description": "Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet"}}}, "Medication.batch": {"type": "object", "description": "Information that only applies to packages (not products)", "properties": {"Medication.ingredient.lotNumber": {"type": "string", "description": "The assigned lot number of a batch of the specified product"}, "Medication.ingredient.expirationDate": {"type": "string", "description": "When this specific batch of product will expire"}}}, "Medication.definition": {"type": "string", "description": "A reference to a knowledge resource that provides more information about this medication"}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "MedicationRequest", "type": "object", "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called 'MedicationRequest' rather than 'MedicationPrescription' or 'MedicationOrder' to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"MedicationRequest.identifier": {"type": "string", "description": "Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."}, "MedicationRequest.basedOn": {"type": "string", "description": "A plan or request that is fulfilled in whole or in part by this medication request."}, "MedicationRequest.priorPrescription": {"type": "string", "description": "Reference to an order/prescription that is being replaced by this MedicationRequest."}, "MedicationRequest.groupIdentifier": {"type": "string", "description": "A shared identifier common to multiple independent Request instances that were activated/authorized more or less simultaneously by a single author. The presence of the same identifier on each request ties those requests together and may have business ramifications in terms of reporting of results, billing, etc. E.g. a requisition number shared by a set of lab tests ordered together, or a prescription number shared by all meds ordered at one time."}, "MedicationRequest.status": {"type": "string", "description": "A code specifying the current state of the order. Generally, this will be active or completed state."}, "MedicationRequest.statusReason": {"type": "string", "description": "Captures the reason for the current state of the MedicationRequest."}, "MedicationRequest.statusChanged": {"type": "string", "description": "The date (and perhaps time) when the status was changed."}, "MedicationRequest.intent": {"type": "string", "description": "Whether the request is a proposal, plan, or an original order.."}, "MedicationRequest.category": {"type": "string", "description": "An arbitrary categorization or grouping of the medication request. It could be used for indicating where meds are intended to be administered, eg. in an inpatient setting or in a patient's home, or a legal category of the medication."}, "MedicationRequest.priority": {"type": "string", "description": "Indicates how quickly the Medication Request should be addressed with respect to other requests."}, "MedicationRequest.doNotPerform": {"type": "boolean", "description": "If true, indicates that the provider is asking for the patient to either stop taking or to not start taking the specified medication. For example, the patient is taking an existing medication and the provider is changing their medication. They want to create two seperate requests: one to stop using the current medication and another to start the new medication."}, "MedicationRequest.medication": {"type": "string", "description": "Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications."}, "MedicationRequest.subject": {"type": "string", "description": "The individual or group for whom the medication has been requested."}, "MedicationRequest.informationSource": {"type": "string", "description": "The person or organization who provided the information about this request, if the source is someone other than the requestor. This is often used when the MedicationRequest is reported by another person."}, "MedicationRequest.encounter": {"type": "string", "description": "The Encounter during which this [x] was created or to which the creation of this record is tightly associated"}, "MedicationRequest.supportingInformation": {"type": "string", "description": "Information to support fulfilling (i.e. dispensing or administering) of the medication, for example, patient height and weight, a MedicationStatement for the patient."}, "MedicationRequest.authoredOn": {"type": "string", "description": "The date (and perhaps time) when the prescription was initially written or authored on."}, "MedicationRequest.requester": {"type": "string", "description": "The individual, organization, or device that initiated the request and has responsibility for its activation"}, "MedicationRequest.reported": {"type": "boolean", "description": "Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record. It may also indicate the source of the report."}, "MedicationRequest.performerType": {"type": "string", "description": "Indicates the type of performer of the administration of the medication."}, "MedicationRequest.performer": {"type": "string", "description": "The specified desired performer of the medication treatment (e.g. the performer of the medication administration). For devices, this is the device that is intended to perform the administration of the medication. An IV Pump would be an example of a device that is performing the administration. Both the IV Pump and the practitioner that set the rate or bolus on the pump can be listed as performers."}, "MedicationRequest.device": {"type": "string", "description": "The intended type of device that is to be used for the administration of the medication (for example, PCA Pump)."}, "MedicationRequest.recorder": {"type": "string", "description": "The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order."}, "MedicationRequest.reason": {"type": "string", "description": "The reason or the indication for ordering or not ordering the medication."}, "MedicationRequest.courseOfTherapyType": {"type": "string", "description": "The description of the overall pattern of the administration of the medication to the patient."}, "MedicationRequest.insurance": {"type": "string", "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service."}, "MedicationRequest.note": {"type": "string", "description": "Extra information about the prescription that could not be conveyed by the other attributes."}, "MedicationRequest.renderedDosageInstruction": {"type": "string", "description": "The full representation of the dose of the medication included in all dosage instructions. To be used when multiple dosage instructions are included to represent complex dosing such as increasing or tapering doses."}, "MedicationRequest.effectiveDosePeriod": {"type": "string", "description": "The period over which the medication is to be taken. Where there are multiple dosageInstruction lines (for example, tapering doses), this is the earliest date and the latest end date of the dosageInstructions."}, "MedicationRequest.dosageInstruction": {"type": "string", "description": "Specific instructions for how the medication is to be used by the patient."}, "MedicationRequest.dispenseRequest": {"type": "object", "description": "Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order). Note that this information is not always sent with the order. There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department.", "properties": {"MedicationRequest.dispenseRequest.initialFill": {"type": "object", "properties": {"MedicationRequest.dispenseRequest.initialFill.quantity": {"type": "string", "description": "The amount or quantity to provide as part of the first dispense."}, "MedicationRequest.dispenseRequest.initialFill.duration": {"type": "string", "description": "The length of time that the first dispense is expected to last."}}}, "MedicationRequest.dispenseInterval": {"type": "string", "description": "The minimum period of time that must occur between dispenses of the medication."}, "MedicationRequest.validityPeriod": {"type": "string", "description": "This indicates the validity period of a prescription (stale dating the Prescription)."}, "MedicationRequest.numberOfRepeatsAllowed": {"type": "integer", "description": "An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus '3 repeats', then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets. A prescriber may explicitly say that zero refills are permitted after the initial dispense."}, "MedicationRequest.quantity": {"type": "string", "description": "The amount that is to be dispensed for one fill."}, "MedicationRequest.expectedSupplyDuration": {"type": "string", "description": "Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last."}, "MedicationRequest.dispenser": {"type": "string", "description": "Indicates the intended performing Organization that will dispense the medication as specified by the prescriber."}, "MedicationRequest.dispenserInstruction": {"type": "string", "description": "Provides additional information to the dispenser, for example, counselling to be provided to the patient."}, "MedicationRequest.doseAdministrationAid": {"type": "string", "description": "Provides information about the type of adherence packaging to be supplied for the medication dispense."}}}, "MedicationRequest.substitution": {"type": "object", "description": "Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done.", "properties": {"MedicationRequest.substitution.allowed": {"type": "boolean", "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed."}, "MedicationRequest.substitution.reason": {"type": "string", "description": "Indicates the reason for the substitution, or why substitution must or must not be performed."}}}, "MedicationRequest.eventHistory": {"type": "string", "description": "Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "MedicationAdministration", "type": "object", "description": "Describes the event of a patient consuming or otherwise being administered a medication. This may be as simple as swallowing a tablet or it may be a long running infusion. Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"MedicationAdministration.identifier": {"type": "string", "description": "Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."}, "MedicationAdministration.basedOn": {"type": "string", "description": "A plan that is fulfilled in whole or in part by this MedicationAdministration."}, "MedicationAdministration.partOf": {"type": "string", "description": "A larger event of which this particular event is a component or step."}, "MedicationAdministration.status": {"type": "string", "description": "Will generally be set to show that the administration has been completed. For some long running administrations such as infusions, it is possible for an administration to be started but not completed or it may be paused while some other process is under way"}, "MedicationAdministration.statusReason": {"type": "string", "description": "A code indicating why the administration was not performed"}, "MedicationAdministration.category": {"type": "string", "description": "The type of medication administration (for example, drug classification like ATC, where meds would be administered, legal category of the medication)"}, "MedicationAdministration.medication": {"type": "string", "description": "Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications."}, "MedicationAdministration.subject": {"type": "string", "description": "TThe person or animal or group receiving the medication."}, "MedicationAdministration.encounter": {"type": "string", "description": "The visit, admission, or other contact between patient and health care provider during which the medication administration was performed."}, "MedicationAdministration.supportingInformation": {"type": "string", "description": "Additional information (for example, patient height and weight) that supports the administration of the medication. This attribute can be used to provide documentation of specific characteristics of the patient present at the time of administration. For example, if the dose says 'give 'x' if the heartrate exceeds 'y'', then the heart rate can be included using this attribute."}, "MedicationAdministration.occurrence": {"type": "string", "description": "A specific date/time or interval of time during which the administration took place (or did not take place). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate."}, "MedicationAdministration.recorded": {"type": "string", "description": "The date the occurrence of the MedicationAdministration was first captured in the record - potentially significantly after the occurrence of the event."}, "MedicationAdministration.isSubPotent": {"type": "boolean", "description": "An indication that the full dose was not administered"}, "MedicationAdministration.subPotentReason": {"type": "string", "description": "The reason or reasons why the full dose was not administered."}, "MedicationAdministration.performer": {"type": "object", "description": "The performer of the medication treatment. For devices this is the device that performed the administration of the medication. An IV Pump would be an example of a device that is performing the administration. Both the IV Pump and the practitioner that set the rate or bolus on the pump can be listed as performers", "properties": {"MedicationAdministration.performer.function": {"type": "string", "description": "Distinguishes the type of involvement of the performer in the medication administration."}, "MedicationAdministration.performer.actor": {"type": "string", "description": "Indicates who or what performed the medication administration"}}}, "MedicationAdministration.reason": {"type": "string", "description": "A code, Condition or observation that supports why the medication was administered."}, "MedicationAdministration.request": {"type": "string", "description": "The original request, instruction or authority to perform the administration."}, "MedicationAdministration.device": {"type": "string", "description": "The device that is to be used for the administration of the medication (for example, PCA Pump)."}, "MedicationAdministration.note": {"type": "string", "description": "Extra information about the medication administration that is not conveyed by the other attributes."}, "MedicationAdministration.dosage": {"type": "object", "description": "Describes the medication dosage information details e.g. dose, rate, site, route, etc.", "properties": {"MedicationAdministration.dosage.text": {"type": "string", "description": "Free text dosage can be used for cases where the dosage administered is too complex to code. When coded dosage is present, the free text dosage may still be present for display to humans."}, "MedicationAdministration.dosage.site": {"type": "string", "description": "A coded specification of the anatomic site where the medication first entered the body. For example, 'left arm'."}, "MedicationAdministration.dosage.route": {"type": "string", "description": "A code specifying the route or physiological path of administration of a therapeutic agent into or onto the patient. For example, topical, intravenous, etc."}, "MedicationAdministration.dosage.method": {"type": "string", "description": "A coded value indicating the method by which the medication is intended to be or was introduced into or on the body. This attribute will most often NOT be populated. It is most commonly used for injections. For example, Slow Push, Deep IV."}, "MedicationAdministration.dosage.dose": {"type": "string", "description": "The amount of the medication given at one administration event. Use this value when the administration is essentially an instantaneous event such as a swallowing a tablet or giving an injection."}, "MedicationAdministration.dosage.rate": {"type": "string", "description": "Identifies the speed with which the medication was or will be introduced into the patient. Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr. May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours. Other examples: 200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours."}}}, "MedicationAdministration.eventHistory": {"type": "string", "description": "A summary of the events of interest that have occurred, such as when the administration was verified"}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "PractitionerRole", "type": "object", "description": "Details of roles that a practitioner may perform or is performing for an organization.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"PractitionerRole.identifier": {"type": "string", "description": "A unique identifier assigned to the practitioner role."}, "PractitionerRole.active": {"type": "boolean", "description": "Indicates whether this practitioner role record is active."}, "PractitionerRole.period": {"type": "string", "description": "The period during which the practitioner is authorized to perform the role."}, "PractitionerRole.practitioner": {"type": "string", "description": "Reference to the practitioner who is performing the role."}, "PractitionerRole.organization": {"type": "string", "description": "The organization where the practitioner is performing the role."}, "PractitionerRole.code": {"type": "string", "description": "Roles the practitioner is authorized to perform for the organization."}, "PractitionerRole.specialty": {"type": "string", "description": "Specific specialty associated with the practitioner role."}, "PractitionerRole.location": {"type": "string", "description": "Locations at which the practitioner provides care."}, "PractitionerRole.healthcareService": {"type": "string", "description": "Healthcare services provided through the role."}, "PractitionerRole.contact": {"type": "string", "description": "Contact information related to the practitioner role."}, "PractitionerRole.characteristic": {"type": "string", "description": "Specific characteristics or capabilities related to the practitioner role."}, "PractitionerRole.communication": {"type": "string", "description": "Languages the practitioner can communicate with during the role."}, "PractitionerRole.availability": {"type": "string", "description": "Availability details for the practitioner in this role."}, "PractitionerRole.endpoint": {"type": "string", "description": "Technical endpoints providing access to services operated for the role."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "RelatedPerson", "type": "object", "description": "Information about a person that is involved in a patient's health or the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"RelatedPerson.identifier": {"type": "string", "description": "Identifier for a person within a particular scope"}, "RelatedPerson.active": {"type": "boolean", "description": "Whether this related person record is in active use."}, "RelatedPerson.patient": {"type": "string", "description": "The patient this person is related to"}, "RelatedPerson.relationship": {"type": "string", "description": "The nature of the relationship between the related person and the patient."}, "RelatedPerson.name": {"type": "string", "description": "A name associated with the person."}, "RelatedPerson.telecom": {"type": "string", "description": "A contact detail for the person, e.g. a telephone number or an email address."}, "RelatedPerson.gender": {"type": "string", "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes"}, "RelatedPerson.birthDate": {"type": "string", "description": "The date on which the related person was born."}, "RelatedPerson.address": {"type": "string", "description": "Address where the related person can be contacted or visited."}, "RelatedPerson.photo": {"type": "string", "description": "Image of the person"}, "RelatedPerson.period": {"type": "string", "description": "The period of time during which this relationship is or was active. If there are no dates defined, then the interval is unknown"}, "RelatedPerson.communication": {"type": "string", "description": "A language which may be used to communicate with the related person about the patient's health."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Person", "type": "object", "description": "Demographics and administrative information about a person independent of a specific health-related context.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Person.identifier": {"type": ["string", "null"], "description": "A unique identifier assigned to the person."}, "Person.active": {"type": ["boolean", "null"], "description": "Whether this person's record is in active use."}, "Person.name": {"type": ["string", "null"], "description": "A name associated with the person."}, "Person.telecom": {"type": ["string", "null"], "description": "A contact detail for the person, e.g., a telephone number or an email address."}, "Person.gender": {"type": ["string", "null"], "description": "Administrative Gender."}, "Person.birthDate": {"type": ["string", "null"], "description": "The birth date for the person."}, "Person.deceased[x]": {"type": ["string", "boolean", "null"], "description": "Indicates if the individual is deceased or not."}, "Person.address": {"type": ["array", "null"], "description": "One or more addresses for the person.", "items": {"type": "string"}}, "Person.maritalStatus": {"type": ["string", "null"], "description": "This field contains a person's most recent marital (civil) status."}, "Person.photo": {"type": ["string", "null"], "description": "An image that can be displayed as a thumbnail of the person to enhance identification."}, "Person.communication": {"type": ["object", "null"], "description": "A language which may be used to communicate with the person about health-related matters.", "properties": {"Person.communication.language": {"type": ["string", "null"], "description": "The ISO-639-1 alpha 2 code in lowercase for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region."}, "Person.communication.preferred": {"type": ["boolean", "null"], "description": "Indicates whether the person prefers this language."}}}, "Person.managingOrganization": {"type": ["string", "null"], "description": "The organization that is the custodian of the person record."}, "Person.link": {"type": ["object", "null"], "description": "Link to a resource that concerns the same actual person.", "properties": {"Person.link.target": {"type": ["string", "null"], "description": "The resource to which this actual person is associated."}, "Person.link.assurance": {"type": ["string", "null"], "description": "Level of assurance that this link is associated with the target resource."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Organization", "type": "object", "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action. Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Organization.identifier": {"type": "string", "description": "Identifier for the organization that is used to identify the organization across multiple disparate systems"}, "Organization.active": {"type": "boolean", "description": "Whether the organization's record is still in active use"}, "Organization.type": {"type": "string", "description": "The kind of organization that this is (e.g., hospital, clinic)."}, "Organization.name": {"type": "string", "description": "The name of the organization."}, "Organization.alias": {"type": "string", "description": "A list of alternate names that the organization is known as."}, "Organization.description": {"type": "string", "description": "Description of the organization, which helps provide additional general context on the organization to ensure that the correct organization is selected"}, "Organization.contact": {"type": "string", "description": "The contact details of communication devices available relevant to the specific Organization. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites."}, "Organization.partOf": {"type": "string", "description": "The organization of which this organization forms a part."}, "Organization.endpoint": {"type": "string", "description": "Technical endpoints providing access to services operated for the organization."}, "Organization.qualification": {"type": "string", "description": "Qualifications of the organization relevant to its role in healthcare.", "properties": {"Organization.qualification.identifier": {"type": "string", "description": "The official certifications, accreditations, training, designations and licenses that authorize and/or otherwise endorse the provision of care by the organization. For example, an approval to provide a type of services issued by a certifying body (such as the US Joint Commission) to an organization"}, "Organization.qualification.code": {"type": "string", "description": "Coded representation of the qualificationorganization."}, "Organization.qualification.issuer": {"type": "string", "description": "Organization that regulates and issues the qualification."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "OrganizationAffiliation", "type": "object", "description": "Defines an affiliation/association/relationship between 2 distinct organizations, that is not a part-of relationship/sub-division relationship.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"OrganizationAffiliation.identifier": {"type": "string", "description": "Business identifiers that are specific to this role."}, "OrganizationAffiliation.active": {"type": "string", "description": "Whether this organization affiliation record is in active use."}, "OrganizationAffiliation.period": {"type": "string", "description": "The period during which the participatingOrganization is affiliated with the primary organization."}, "OrganizationAffiliation.language": {"type": "string", "description": "The base language in which the resource is written."}, "OrganizationAffiliation.organization": {"type": "string", "description": "Organization where the role is available (primary organization/has members)."}, "OrganizationAffiliation.participatingOrganization": {"type": "string", "description": "The Participating Organization provides/performs the role(s) defined by the code to the Primary Organization (e.g. providing services or is a member of)"}, "OrganizationAffiliation.network": {"type": "string", "description": "The network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined)."}, "OrganizationAffiliation.code": {"type": "string", "description": "Definition of the role the participatingOrganization plays in the association."}, "OrganizationAffiliation.specialty": {"type": "string", "description": "Specific specialty of the participatingOrganization in the context of the role."}, "OrganizationAffiliation.location": {"type": "string", "description": "The location(s) at which the role occurs."}, "OrganizationAffiliation.healthcareService": {"type": "string", "description": "Healthcare services provided through the role"}, "OrganizationAffiliation.contact": {"type": "string", "description": "The contact details of communication devices available at the participatingOrganization relevant to this Affiliation."}, "OrganizationAffiliation.endpoint": {"type": "string", "description": "Technical endpoints providing access to services operated for this role."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "HealthcareService", "type": "object", "description": "The details of a healthcare service available at a location", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"HealthcareService.identifier": {"type": "string", "description": "External identifiers for this item"}, "HealthcareService.active": {"type": "boolean", "description": "This flag is used to mark the record to not be used. This is not used when a center is closed for maintenance, or for holidays, the notAvailable period is to be used for this"}, "HealthcareService.providedBy": {"type": "string", "description": "The organization that provides this healthcare service."}, "HealthcareService.offeredIn": {"type": "string", "description": "When the HealthcareService is representing a specific, schedulable service, the availableIn property can refer to a generic service."}, "HealthcareService.category": {"type": "string", "description": "Identifies the broad category of service being performed or delivered"}, "HealthcareService.type": {"type": "string", "description": "The specific type of service that may be delivered or performed"}, "HealthcareService.specialty": {"type": "string", "description": "Collection of specialties handled by the Healthcare service. This is more of a medical term"}, "HealthcareService.location": {"type": "string", "description": "The location(s) where this healthcare service may be provided."}, "HealthcareService.name": {"type": "string", "description": "The official name of the healthcare service."}, "HealthcareService.comment": {"type": "string", "description": "Any additional description of the service and/or any specific issues not covered by the other attributes, which can be displayed as further detail under the serviceName"}, "HealthcareService.extraDetails": {"type": "string", "description": "Extra details about the healthcare service that can't be placed in the other fields."}, "HealthcareService.photo": {"type": "string", "description": "If there is a photo/symbol associated with this HealthcareService, it may be included here to facilitate quick identification of the service in a list"}, "HealthcareService.contact": {"type": "string", "description": "The contact details of communication devices available relevant to the specific HealthcareService. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites."}, "HealthcareService.coverageArea": {"type": "string", "description": "The location(s) that this service is available to (not where the service is provided)."}, "HealthcareService.serviceProvisionCode": {"type": "string", "description": "The code(s) that detail the conditions under which the healthcare service is available/offered."}, "HealthcareService.eligibility": {"type": "string", "description": "Does this service have specific eligibility requirements that need to be met in order to use the service?", "properties": {"HealthcareService.eligibility.code": {"type": "string", "description": "Coded value for the eligibility"}, "HealthcareService.eligibility.comment": {"type": "string", "description": "Describes the eligibility conditions for the service"}}}, "HealthcareService.program": {"type": "string", "description": "Programs that this service is applicable to"}, "HealthcareService.characteristic": {"type": "string", "description": "Collection of characteristics (attributes)"}, "HealthcareService.communication": {"type": "string", "description": "Some services are specifically made available in multiple languages, this property permits a directory to declare the languages this is offered in. Typically this is only provided where a service operates in communities with mixed languages used."}, "HealthcareService.referralMethod": {"type": "string", "description": "Ways that the service accepts referrals, if this is not provided then it is implied that no referral is required"}, "HealthcareService.appointmentRequired": {"type": "boolean", "description": "Indicates whether or not a prospective consumer will require an appointment for a particular service at a site to be provided by the Organization. Indicates if an appointment is required for access to this service"}, "HealthcareService.availability": {"type": "string", "description": "A collection of times that the healthcare service is available"}, "HealthcareService.endpoint": {"type": "string", "description": "Technical endpoints providing access to services operated for the specific healthcare services defined at this resource"}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Endpoint", "type": "object", "description": "The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b, a REST endpoint for another FHIR server, or a s/Mime email address. This may include any security context information.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Endpoint.identifier": {"type": "string", "description": "Identifier for the organization that is used to identify the endpoint across multiple disparate systems"}, "Endpoint.status": {"type": "string", "description": "The endpoint status represents the general expected availability of an endpoint."}, "Endpoint.connectionType": {"type": "string", "description": "A coded value that represents the technical details of the usage of this endpoint, such as what WSDLs should be used in what way. (e.g. XDS.b/DICOM/cds-hook)"}, "Endpoint.name": {"type": "string", "description": "A friendly name that this endpoint can be referred to with"}, "Endpoint.description": {"type": "string", "description": "The description of the endpoint and what it is for (typically used as supplemental information in an endpoint directory describing its usage/purpose)"}, "Endpoint.environmentType": {"type": "string", "description": "The type of environment(s) exposed at this endpoint (dev, prod, test, etc.)."}, "Endpoint.managingOrganization": {"type": "string", "description": "The organization that manages this endpoint (even if technically another organization is hosting this in the cloud, it is the organization associated with the data)"}, "Endpoint.contact": {"type": "string", "description": "Contact details for a human to contact about the endpoint. The primary use of this for system administrator troubleshooting"}, "Endpoint.period": {"type": "string", "description": "The interval during which the endpoint is expected to be operational."}, "Endpoint.payload": {"type": "object", "properties": {"Endpoint.payload.type": {"type": "string", "description": "The payload type describes the acceptable content that can be communicated on the endpoint"}, "Endpoint.payload.mimeType": {"type": "string", "description": "The mime type to send the payload in - e.g. application/fhir+xml, application/fhir+json. If the mime type is not specified, then the sender could send any content (including no content depending on the connectionType)"}}, "description": "The set of payloads that are provided/available at this endpoint"}, "Endpoint.address": {"type": "string", "description": "The uri that describes the actual end-point to connect to"}, "Endpoint.header": {"type": "string", "description": "Additional headers / information to send as part of the notification"}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Observation", "type": "object", "description": "Measurements and simple assertions made about a patient, device or other subject.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Observation.identifier": {"type": "string", "description": "A unique identifier assigned to the observation."}, "Observation.instantiates": {"type": "string", "description": "The reference to a FHIR ObservationDefinition resource that provides the definition that is adhered to in whole or in part by this Observation instance."}, "Observation.basedOn": {"type": "string", "description": "A plan, proposal or order that is fulfilled in whole or in part by this event."}, "Observation.triggeredBy": {"type": "object", "description": "Identifies the observation(s) that triggered the performance of this observation.", "properties": {"Observation.triggeredBy.observation": {"type": "string", "description": "Reference to the triggering observation."}, "Observation.triggeredBy.type": {"type": "string", "description": "The type of trigger. Reflex | Repeat | Re-run."}, "Observation.triggeredBy.reason": {"type": "string", "description": "Provides the reason why this observation was performed as a result of the observation(s) referenced."}}}, "Observation.partOf": {"type": "string", "description": "A larger event of which this particular Observation is a component or step."}, "Observation.status": {"type": "string", "description": "The status of the result value."}, "Observation.category": {"type": "string", "description": "A code that classifies the general type of observation being made."}, "Observation.code": {"type": "string", "description": "Describes what was observed. Sometimes this is called the observation 'name'."}, "Observation.subject": {"type": "string", "description": "The patient, or group of patients, location, device, organization, procedure or practitioner this observation is about."}, "Observation.focus": {"type": "string", "description": "The actual focus of an observation when it is not the patient of record."}, "Observation.encounter": {"type": "string", "description": "The healthcare event during which this observation is made."}, "Observation.effective": {"type": "string", "description": "The time or time-period the observed value is asserted as being true."}, "Observation.issued": {"type": "string", "description": "The date and time this version of the observation was made available to providers."}, "Observation.performer": {"type": "string", "description": "Who was responsible for asserting the observed value as 'true'."}, "Observation.value": {"type": "string", "description": "The information determined as a result of making the observation."}, "Observation.dataAbsentReason": {"type": "string", "description": "Provides a reason why the expected value in the element Observation.value[x] is missing."}, "Observation.interpretation": {"type": "string", "description": "A categorical assessment of an observation value."}, "Observation.note": {"type": "string", "description": "Comments about the observation or the results."}, "Observation.bodySite": {"type": "string", "description": "Indicates the site on the subject's body where the observation was made."}, "Observation.bodyStructure": {"type": "string", "description": "Indicates the body structure on the subject's body where the observation was made."}, "Observation.method": {"type": "string", "description": "Indicates the mechanism used to perform the observation."}, "Observation.specimen": {"type": "string", "description": "The specimen that was used when this observation was made."}, "Observation.device": {"type": "string", "description": "A reference to the device that generates the measurements."}, "Observation.referenceRange": {"type": "object", "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.", "properties": {"Observation.referenceRange.low": {"type": "string", "description": "The value of the low bound of the reference range."}, "Observation.referenceRange.high": {"type": "string", "description": "The value of the high bound of the reference range."}, "Observation.referenceRange.normalValue": {"type": "string", "description": "The value of the normal value of the reference range."}, "Observation.referenceRange.type": {"type": "string", "description": "Codes to indicate what part of the targeted reference population it applies to."}, "Observation.referenceRange.appliesTo": {"type": "string", "description": "Codes to indicate the target population this reference range applies to."}, "Observation.referenceRange.age": {"type": "string", "description": "The age at which this reference range is applicable."}, "Observation.referenceRange.text": {"type": "string", "description": "Text based reference range in an observation."}}}, "Observation.hasMember": {"type": "string", "description": "This observation is a group observation that includes the target as a member of the group."}, "Observation.derivedFrom": {"type": "string", "description": "The target resource that represents a measurement from which this observation value is derived."}, "Observation.component": {"type": "object", "description": "Some observations have multiple component observations.", "properties": {"Observation.component.code": {"type": "string", "description": "Describes what was observed."}, "Observation.component.value": {"type": "string", "description": "The information determined as a result of making the observation."}, "Observation.component.dataAbsentReason": {"type": "string", "description": "Provides a reason why the expected value in the element Observation.component.value[x] is missing."}, "Observation.component.interpretation": {"type": "string", "description": "A categorical assessment of an observation value."}, "Observation.component.referenceRange": {"type": "string", "description": "Guidance on how to interpret the value by comparison to a normal or recommended range."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "MedicationDispense", "type": "object", "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient. This includes a description of the medication product (supply) provided and the instructions for administering the medication. The medication dispense is the result of a pharmacy system responding to a medication order.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"MedicationDispense.identifier": {"type": "string", "description": "Identifiers associated with this Medication Dispense that are defined by business processes."}, "MedicationDispense.basedOn": {"type": "string", "description": "A plan that is fulfilled in whole or in part by this MedicationDispense."}, "MedicationDispense.partOf": {"type": "string", "description": "The procedure or medication administration that triggered the dispense."}, "MedicationDispense.status": {"type": "string", "description": "A code specifying the state of the set of dispense events."}, "MedicationDispense.notPerformedReason": {"type": "string", "description": "Indicates the reason why a dispense was not performed."}, "MedicationDispense.statusChanged": {"type": "string", "description": "The date (and maybe time) when the status of the dispense record changed."}, "MedicationDispense.category": {"type": "string", "description": "Indicates the type of medication dispense (e.g., drug classification like ATC)."}, "MedicationDispense.medication": {"type": "string", "description": "Identifies the medication supplied, either as a link to a resource or a code that identifies the medication."}, "MedicationDispense.subject": {"type": "string", "description": "A link to a resource representing the person or group to whom the medication will be given."}, "MedicationDispense.encounter": {"type": "string", "description": "The encounter that establishes the context for this event."}, "MedicationDispense.supportingInformation": {"type": "string", "description": "Additional information that supports the medication being dispensed."}, "MedicationDispense.performer": {"type": "object", "description": "Indicates who or what performed the event.", "properties": {"MedicationDispense.performer.function": {"type": "string", "description": "Distinguishes the type of performer in the dispense."}, "MedicationDispense.performer.actor": {"type": "string", "description": "The device, practitioner, etc. who performed the action."}}}, "MedicationDispense.location": {"type": "string", "description": "The principal physical location where the dispense was performed."}, "MedicationDispense.authorizingPrescription": {"type": "string", "description": "Indicates the medication order that is being dispensed against."}, "MedicationDispense.type": {"type": "string", "description": "Indicates the type of dispensing event that is performed."}, "MedicationDispense.quantity": {"type": "string", "description": "The amount of medication that has been dispensed, including unit of measure."}, "MedicationDispense.daysSupply": {"type": "string", "description": "The amount of medication expressed as a timing amount."}, "MedicationDispense.recorded": {"type": "string", "description": "The date (and maybe time) when the dispense activity started."}, "MedicationDispense.whenPrepared": {"type": "string", "description": "The time when the dispensed product was packaged and reviewed."}, "MedicationDispense.whenHandedOver": {"type": "string", "description": "The time the dispensed product was provided to the patient or their representative."}, "MedicationDispense.destination": {"type": "string", "description": "Identification of the facility/location where the medication was/will be shipped to."}, "MedicationDispense.receiver": {"type": "string", "description": "Identifies the person who picked up the medication or the location of where the medication was delivered."}, "MedicationDispense.note": {"type": "string", "description": "Extra information about the dispense that could not be conveyed in the other attributes."}, "MedicationDispense.renderedDosageInstruction": {"type": "string", "description": "The full representation of the dose of the medication included in all dosage instructions."}, "MedicationDispense.dosageInstruction": {"type": "string", "description": "Indicates how the medication is to be used by the patient."}, "MedicationDispense.substitution": {"type": "object", "description": "Indicates whether or not substitution was made as part of the dispense.", "properties": {"MedicationDispense.substitution.wasSubstituted": {"type": "boolean", "description": "True if the dispenser dispensed a different drug or product from what was prescribed."}, "MedicationDispense.substitution.type": {"type": "string", "description": "A code signifying whether a different drug was dispensed from what was prescribed."}, "MedicationDispense.substitution.reason": {"type": "string", "description": "Indicates the reason for the substitution (or lack of substitution)."}, "MedicationDispense.substitution.responsibleParty": {"type": "string", "description": "The person or organization that has primary responsibility for the substitution."}}}, "MedicationDispense.eventHistory": {"type": "string", "description": "A summary of the events of interest that have occurred, such as when the dispense was verified."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Location", "type": "object", "description": "Details and position information for a place where services are provided and resources and participants may be stored, found, contained, or accommodated.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Location.identifier": {"type": "string", "description": "Unique code or number identifying the location."}, "Location.status": {"type": "string", "description": "The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location."}, "Location.operationalStatus": {"type": "string", "description": "The operational status covers operation values most relevant to beds (but can also apply to rooms/units/chairs/etc. such as an isolation unit/dialysis chair). This typically covers concepts such as contamination, housekeeping, and other activities like maintenance."}, "Location.name": {"type": "string", "description": "Name of the location as used by humans. Does not need to be unique."}, "Location.alias": {"type": "string", "description": "A list of alternate names that the location is known as, or was known as, in the past"}, "Location.description": {"type": "string", "description": "Description of the Location, which helps in finding or referencing the place."}, "Location.mode": {"type": "string", "description": "Indicates whether a resource instance represents a specific location or a class of locations"}, "Location.type": {"type": "string", "description": "Indicates the type of function performed at the location"}, "Location.contact": {"type": "string", "description": "The contact details of communication devices available at the location. This can include addresses, phone numbers, fax numbers, mobile numbers, email addresses and web sites"}, "Location.address": {"type": "string", "description": "Physical location"}, "Location.form": {"type": "string", "description": "Physical form of the location, e.g. building, room, vehicle, road, virtual"}, "Location.position": {"type": "object", "description": "The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML)", "properties": {"Location.position.longitude": {"type": "string", "description": "Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes on Location main page)."}, "Location.position.latitude": {"type": "string", "description": "Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes on Location main page)"}, "Location.position.altitude": {"type": "string", "description": "Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes on Location main page)."}}}, "Location.managingOrganization": {"type": "string", "description": "The organization responsible for the provisioning and upkeep of the location."}, "Location.partOf": {"type": "string", "description": "Another Location of which this Location is physically a part of."}, "Location.characteristic": {"type": "string", "description": "Collection of characteristics (attributes)."}, "Location.hoursOfOperation": {"type": "string", "description": "What days/times during a week is this location usually open, and any exceptions where the location is not available."}, "Location.virtualService": {"type": "string", "description": "Connection details of a virtual service (e.g. shared conference call facility with dedicated number/details)."}, "Location.endpoint": {"type": "string", "description": "Technical endpoints providing access to services operated for the location."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "DocumentReference", "type": "object", "description": "A reference to a document of any kind for any purpose. While the term \u201cdocument\u201d implies a more narrow focus, for this resource this 'document' encompasses any serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare. The DocumentReference resource provides metadata about the document so that the document can be discovered and managed. The actual content may be inline base64 encoded data or provided by direct reference", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"DocumentReference.identifier": {"type": "string", "description": "Other business identifiers associated with the document, including version independent identifiers"}, "DocumentReference.version": {"type": "string", "description": "An explicitly assigned identifer of a variation of the content in the DocumentReference."}, "DocumentReference.basedOn": {"type": "string", "description": "A procedure that is fulfilled in whole or in part by the creation of this media."}, "DocumentReference.status": {"type": "string", "description": "The status of the document reference (e.g., current, superseded, entered-in-error)."}, "DocumentReference.docStatus": {"type": "string", "description": "The status of the underlying document (e.g., preliminary, final)."}, "DocumentReference.modality": {"type": "string", "description": "Imaging modality used. This may include both acquisition and non-acquisition modalities."}, "DocumentReference.type": {"type": "string", "description": "Specifies the particular kind of document referenced (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced."}, "DocumentReference.category": {"type": "string", "description": "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type."}, "DocumentReference.subject": {"type": "string", "description": "Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure)."}, "DocumentReference.context": {"type": "string", "description": "Describes the clinical encounter or type of care that the document content is associated with."}, "DocumentReference.event": {"type": "string", "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type Code, such as a 'History and Physical Report' in which the procedure being documented is necessarily a 'History and Physical' act."}, "DocumentReference.bodySite": {"type": "string", "description": "The anatomic structures included in the document."}, "DocumentReference.facilityType": {"type": "string", "description": "The kind of facility where the patient was seen."}, "DocumentReference.practiceSetting": {"type": "string", "description": "This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty"}, "DocumentReference.period": {"type": "string", "description": "The time period over which the service that is described by the document was provided"}, "DocumentReference.date": {"type": "string", "description": "When the document reference was created"}, "DocumentReference.author": {"type": "string", "description": "Identifies who is responsible for adding the information to the document."}, "DocumentReference.attester": {"type": "object", "description": "A participant who has authenticated the accuracy of the document.", "properties": {"DocumentReference.attester.mode": {"type": "string", "description": "The type of attestation the authenticator offers (e.g., personal, professional, legal, official)."}, "DocumentReference.attester.time": {"type": "string", "description": "When the document was attested by the party."}, "DocumentReference.attester.party": {"type": "string", "description": "Who attested the document in the specified way (e.g., Patient, RelatedPerson, Practitioner, PractitionerRole, Organization)."}}}, "DocumentReference.custodian": {"type": "string", "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the document."}, "DocumentReference.relatesTo": {"type": "object", "description": "Relationships that this document has with other document references that already exist.", "properties": {"DocumentReference.relatesTo.code": {"type": "string", "description": "The type of relationship that this document has with another document (e.g., appends, replaces)."}, "DocumentReference.relatesTo.target": {"type": "string", "description": "The target document of this relationship."}}}, "DocumentReference.description": {"type": "string", "description": "A description or summary of the document."}, "DocumentReference.securityLabel": {"type": "string", "description": "A set of security labels that defines which individuals or systems have permission to access the document."}, "DocumentReference.content": {"type": "array", "description": "The document and format referenced. If there are multiple content element repetitions, these must all represent the same document in different format, or attachment metadata.", "items": {"type": "object", "properties": {"DocumentReference.content.attachment": {"type": "string", "description": "The document or URL of the document along with critical metadata to prove content has integrity."}, "DocumentReference.content.profile": {"type": "array", "items": {"type": "string", "description": "An identifier of the document constraints, encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType."}, "properties": {"DocumentReference.content.profile.value[x]": {"type": "string", "description": "Code|uri|canonical."}}}}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "DiagnosticReport", "type": "object", "description": "The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"DiagnosticReport.identifier": {"type": "string", "description": "Identifiers assigned to this report by the performer or other systems."}, "DiagnosticReport.basedOn": {"type": "string", "description": "Details concerning a service requested."}, "DiagnosticReport.status": {"type": "string", "description": "The status of the diagnostic report (e.g., registered, partial, final, corrected)."}, "DiagnosticReport.category": {"type": "string", "description": "A code that classifies the clinical discipline, department, or diagnostic service that created the report (e.g., cardiology, biochemistry)."}, "DiagnosticReport.code": {"type": "string", "description": "A code or name that describes this diagnostic report."}, "DiagnosticReport.subject": {"type": "string", "description": "The subject of the report - usually, but not always, the patient."}, "DiagnosticReport.encounter": {"type": "string", "description": "The healthcare event (e.g., a patient and healthcare provider interaction) which this DiagnosticReport is about."}, "DiagnosticReport.effective[x]": {"type": "string", "description": "The time or time-period the observed values are related to."}, "DiagnosticReport.issued": {"type": "string", "description": "The date and time that this version of the report was made available to providers."}, "DiagnosticReport.performer": {"type": "string", "description": "The diagnostic service that is responsible for issuing the report."}, "DiagnosticReport.resultsInterpreter": {"type": "string", "description": "The practitioner or organization that is responsible for the report's conclusions and interpretations."}, "DiagnosticReport.specimen": {"type": "string", "description": "Details about the specimens on which this diagnostic report is based."}, "DiagnosticReport.result": {"type": "string", "description": "Observations that are part of this diagnostic report."}, "DiagnosticReport.note": {"type": "string", "description": "Comments about the diagnostic report."}, "DiagnosticReport.study": {"type": "string", "description": "One or more links to full details of any study performed during the diagnostic investigation."}, "DiagnosticReport.supportingInfo": {"type": "object", "description": "Additional information supporting the diagnostic report.", "properties": {"DiagnosticReport.supportingInfo.type": {"type": "string", "description": "The code value for the role of the supporting information in the diagnostic report."}, "DiagnosticReport.supportingInfo.reference": {"type": "string", "description": "The reference for the supporting information in the diagnostic report."}}}, "DiagnosticReport.media": {"type": "object", "description": "A list of key images or data associated with this report.", "properties": {"DiagnosticReport.media.comment": {"type": "string", "description": "A comment about the image or data. Typically, this is used to provide an explanation for why the image or data is included."}, "DiagnosticReport.media.link": {"type": "string", "description": "Reference to the image or data source."}}}, "DiagnosticReport.composition": {"type": "string", "description": "Reference to a Composition resource instance that provides structure for organizing the contents of the DiagnosticReport."}, "DiagnosticReport.conclusion": {"type": "string", "description": "Concise and clinically contextualized summary conclusion (interpretation/impression) of the diagnostic report."}, "DiagnosticReport.conclusionCode": {"type": "string", "description": "One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report."}, "DiagnosticReport.presentedForm": {"type": "string", "description": "Rich text representation of the entire result as issued by the diagnostic service."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Specimen", "type": "object", "description": "A sample to be used for analysis, including attributes such as identifiers, status, type, and collection details.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Specimen.identifier": {"type": "string", "description": "Identifiers assigned to this specimen by the performer or other systems."}, "Specimen.accessionIdentifier": {"type": "string", "description": "The identifier assigned by the lab when accessioning specimen(s)."}, "Specimen.status": {"type": "string", "description": "The availability of the specimen (e.g., available, unavailable, unsatisfactory, entered-in-error)."}, "Specimen.type": {"type": "string", "description": "The kind of material that forms the specimen."}, "Specimen.subject": {"type": "string", "description": "Where the specimen came from, such as a patient, location, or sampling of a substance."}, "Specimen.receivedTime": {"type": "string", "description": "Time when specimen is received by the testing laboratory for processing or testing."}, "Specimen.parent": {"type": "string", "description": "Reference to the parent (source) specimen from which this specimen is derived."}, "Specimen.request": {"type": "string", "description": "Details concerning a service request that required a specimen to be collected."}, "Specimen.combined": {"type": "string", "description": "Indicates if the specimen is part of a group or pooled."}, "Specimen.role": {"type": "string", "description": "The role or reason for the specimen in the testing workflow."}, "Specimen.feature": {"type": "object", "description": "A physical feature or landmark on a specimen, highlighted for context by the collector.", "properties": {"Specimen.feature.type": {"type": "string", "description": "The landmark or feature being highlighted."}, "Specimen.feature.description": {"type": "string", "description": "Description of the feature of the specimen."}}}, "Specimen.collection": {"type": "object", "description": "Details concerning the specimen collection, including collector, time, and method.", "properties": {"Specimen.collection.collector": {"type": "string", "description": "Person who collected the specimen."}, "Specimen.collection.collected[x]": {"type": "string", "description": "Time when specimen was collected from the subject."}, "Specimen.collection.duration": {"type": "string", "description": "The span of time over which the collection of a specimen occurred."}, "Specimen.collection.quantity": {"type": "string", "description": "The quantity of specimen collected."}, "Specimen.collection.method": {"type": "string", "description": "The technique that is used to perform the procedure."}, "Specimen.collection.device": {"type": "string", "description": "The device used to perform the specimen collection."}, "Specimen.collection.procedure": {"type": "string", "description": "The procedure event during which the specimen was collected."}, "Specimen.collection.bodySite": {"type": "string", "description": "Anatomical location from which the specimen was collected."}, "Specimen.collection.fastingStatus[x]": {"type": "string", "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection."}}}, "Specimen.processing": {"type": "object", "description": "Details concerning processing and processing steps for the specimen.", "properties": {"Specimen.processing.description": {"type": "string", "description": "Textual description of the procedure."}, "Specimen.processing.method": {"type": "string", "description": "The method used to process the specimen."}, "Specimen.processing.additive": {"type": "string", "description": "Material used in the processing step."}, "Specimen.processing.time[x]": {"type": "string", "description": "The time or period when the specimen processing occurred."}}}, "Specimen.container": {"type": "object", "description": "The container holding the specimen.", "properties": {"Specimen.container.device": {"type": "string", "description": "The device resource for the container holding the specimen."}, "Specimen.container.location": {"type": "string", "description": "The location of the container holding the specimen."}, "Specimen.container.specimenQuantity": {"type": "string", "description": "The quantity of specimen in the container."}}}, "Specimen.condition": {"type": "string", "description": "A mode or state of being that describes the nature of the specimen."}, "Specimen.note": {"type": "string", "description": "To communicate any details or issues about the specimen or during the specimen collection."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "BodyStructure", "type": "object", "description": "Record details about an anatomical structure, including attributes such as identifiers, morphology, included and excluded structures, and patient reference.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"BodyStructure.identifier": {"type": "string", "description": "Identifier for this instance of the anatomical structure."}, "BodyStructure.active": {"type": "boolean", "description": "Whether this body site is in active use."}, "BodyStructure.morphology": {"type": "string", "description": "The kind of structure being represented by the body structure."}, "BodyStructure.includedStructure": {"type": "object", "description": "The anatomical location(s) or region(s) of the specimen, lesion, or body structure.", "properties": {"BodyStructure.includedStructure.structure": {"type": "string", "description": "Code that represents the included structure."}, "BodyStructure.includedStructure.laterality": {"type": "string", "description": "Code that represents the included structure laterality."}, "BodyStructure.includedStructure.bodyLandmarkOrientation": {"type": "object", "description": "Body locations in relation to a specific body landmark.", "properties": {"BodyStructure.includedStructure.bodyLandmarkOrientation.landmarkDescription": {"type": "string", "description": "A description of a landmark on the body used as a reference to locate something else."}, "BodyStructure.includedStructure.bodyLandmarkOrientation.clockFacePosition": {"type": "string", "description": "An description of the direction away from a landmark something is located based on a radial clock dial."}, "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark": {"type": "object", "description": "The distance in centimeters a certain observation is made from a body landmark.", "properties": {"BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark.device": {"type": "string", "description": "An instrument, tool, analyzer, etc. used in the measurement."}, "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark.value": {"type": "string", "description": "The measured distance (e.g., in cm) from a body landmark."}}}, "BodyStructure.includedStructure.bodyLandmarkOrientation.surfaceOrientation": {"type": "string", "description": "The surface area a body location is in relation to a landmark."}}}, "BodyStructure.includedStructure.spatialReference": {"type": "string", "description": "XY or XYZ-coordinate orientation for structure."}, "BodyStructure.includedStructure.qualifier": {"type": "string", "description": "Code that represents the included structure qualifier."}}}, "BodyStructure.excludedStructure": {"type": "string", "description": "The anatomical location(s) or region(s) not occupied or represented by the specimen, lesion, or body structure."}, "BodyStructure.description": {"type": "string", "description": "A summary, characterization or explanation of the body structure."}, "BodyStructure.image": {"type": "string", "description": "Image or images used to identify a location."}, "BodyStructure.patient": {"type": "string", "description": "The person to which the body site belongs."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "ImagingStudy", "type": "object", "description": "Representation of the content produced in a DICOM imaging study, including identifiers, status, subject, performer, series, and instance details.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"ImagingStudy.identifier": {"type": "string", "description": "Identifiers for the ImagingStudy such as DICOM Study Instance UID."}, "ImagingStudy.status": {"type": "string", "description": "The current state of the ImagingStudy resource."}, "ImagingStudy.modality": {"type": "string", "description": "A list of all the distinct values of series.modality."}, "ImagingStudy.subject": {"type": "string", "description": "The subject, typically a patient, of the imaging study."}, "ImagingStudy.encounter": {"type": "string", "description": "The healthcare event during which this ImagingStudy is made."}, "ImagingStudy.started": {"type": "string", "description": "Date and time the study started."}, "ImagingStudy.basedOn": {"type": "string", "description": "A list of the diagnostic requests that resulted in this imaging study being performed."}, "ImagingStudy.partOf": {"type": "string", "description": "A larger event of which this particular ImagingStudy is a component or step."}, "ImagingStudy.referrer": {"type": "string", "description": "The requesting/referring physician."}, "ImagingStudy.endpoint": {"type": "string", "description": "The network service providing access for the study."}, "ImagingStudy.numberOfSeries": {"type": "integer", "description": "Number of Series in the Study."}, "ImagingStudy.numberOfInstances": {"type": "integer", "description": "Number of SOP Instances in Study."}, "ImagingStudy.procedure": {"type": "string", "description": "This field corresponds to the DICOM Procedure Code Sequence."}, "ImagingStudy.location": {"type": "string", "description": "The principal physical location where the ImagingStudy was performed."}, "ImagingStudy.reason": {"type": "string", "description": "Description of clinical condition indicating why the ImagingStudy was requested."}, "ImagingStudy.note": {"type": "string", "description": "User-defined comments about the imaging study."}, "ImagingStudy.description": {"type": "string", "description": "The Imaging Manager description of the study."}, "ImagingStudy.series": {"type": "object", "description": "Each study has one or more series of images or other content.", "properties": {"ImagingStudy.series.uid": {"type": "string", "description": "The DICOM Series Instance UID for the series."}, "ImagingStudy.series.number": {"type": "integer", "description": "The numeric identifier of this series in the study."}, "ImagingStudy.series.modality": {"type": "string", "description": "The distinct modality for this series."}, "ImagingStudy.series.description": {"type": "string", "description": "A description of the series."}, "ImagingStudy.series.numberOfInstances": {"type": "integer", "description": "Number of SOP Instances in the Study."}, "ImagingStudy.series.endpoint": {"type": "string", "description": "The network service providing access for this series."}, "ImagingStudy.series.bodySite": {"type": "string", "description": "The anatomic structures examined."}, "ImagingStudy.series.laterality": {"type": "string", "description": "The laterality of the anatomic structures examined."}, "ImagingStudy.series.specimen": {"type": "string", "description": "The specimen imaged."}, "ImagingStudy.series.started": {"type": "string", "description": "The date and time the series was started."}, "ImagingStudy.series.performer": {"type": "object", "description": "Indicates who or what performed the series and how they were involved.", "properties": {"ImagingStudy.series.performer.function": {"type": "string", "description": "Distinguishes the type of involvement of the performer in the series."}, "ImagingStudy.series.performer.actor": {"type": "string", "description": "Indicates who or what performed the series."}}}, "ImagingStudy.series.instance": {"type": "object", "description": "A single SOP instance within the series, e.g. an image, or presentation state.", "properties": {"ImagingStudy.series.instance.uid": {"type": "string", "description": "The DICOM SOP Instance UID for this image or other DICOM content."}, "ImagingStudy.series.instance.sopClass": {"type": "string", "description": "DICOM instance type."}, "ImagingStudy.series.instance.number": {"type": "integer", "description": "The number of instance in the series."}, "ImagingStudy.series.instance.title": {"type": "string", "description": "The description of the instance."}}}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "MolecularSequence", "type": "object", "description": "Representation of a molecular sequence, including identifiers, type, subject, specimen, performer, and various sequence-related attributes.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"MolecularSequence.identifier": {"type": "string", "description": "A unique identifier for this particular sequence instance."}, "MolecularSequence.type": {"type": "string", "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence."}, "MolecularSequence.subject": {"type": "string", "description": "Indicates the subject this sequence is associated to."}, "MolecularSequence.focus": {"type": "string", "description": "The actual focus of a molecular sequence when it is not the patient of record."}, "MolecularSequence.specimen": {"type": "string", "description": "Specimen used for sequencing."}, "MolecularSequence.device": {"type": "string", "description": "The method for sequencing, for example, chip information."}, "MolecularSequence.performer": {"type": "string", "description": "The organization or lab that should be responsible for this result."}, "MolecularSequence.literal": {"type": "string", "description": "Sequence that was observed."}, "MolecularSequence.formatted": {"type": "string", "description": "Sequence that was observed as file content, either embedded or referenced by a URL."}, "MolecularSequence.relative": {"type": "object", "description": "A sequence defined relative to another sequence.", "properties": {"MolecularSequence.relative.coordinateSystem": {"type": "string", "description": "Ways of identifying nucleotides or amino acids within a sequence."}, "MolecularSequence.relative.ordinalPosition": {"type": "integer", "description": "Indicates the order in which the sequence should be considered when putting multiple 'relative' elements together."}, "MolecularSequence.relative.sequenceRange": {"type": "string", "description": "Indicates the nucleotide range in the composed sequence when multiple 'relative' elements are used together."}, "MolecularSequence.relative.startingSequence": {"type": "object", "description": "A sequence that is used as a starting sequence to describe variants that are present in a sequence analyzed.", "properties": {"MolecularSequence.relative.startingSequence.genomeAssembly": {"type": "string", "description": "The genome assembly used for starting sequence, e.g. GRCh38."}, "MolecularSequence.relative.startingSequence.chromosome": {"type": "string", "description": "Structural unit composed of a nucleic acid molecule which controls its own replication."}, "MolecularSequence.relative.startingSequence.sequence[x]": {"type": "string", "description": "The reference sequence that represents the starting sequence."}, "MolecularSequence.relative.startingSequence.windowStart": {"type": "integer", "description": "Start position of the window on the starting sequence."}, "MolecularSequence.relative.startingSequence.windowEnd": {"type": "integer", "description": "End position of the window on the starting sequence."}, "MolecularSequence.relative.startingSequence.orientation": {"type": "string", "description": "A relative reference to a DNA strand based on gene orientation."}, "MolecularSequence.relative.startingSequence.strand": {"type": "string", "description": "An absolute reference to a strand."}}}, "MolecularSequence.relative.edit": {"type": "object", "description": "Changes in sequence from the starting sequence.", "properties": {"MolecularSequence.relative.edit.start": {"type": "integer", "description": "Start position of the edit on the starting sequence."}, "MolecularSequence.relative.edit.end": {"type": "integer", "description": "End position of the edit on the starting sequence."}, "MolecularSequence.relative.edit.replacementSequence": {"type": "string", "description": "Allele that was observed."}, "MolecularSequence.relative.edit.replacedSequence": {"type": "string", "description": "Allele in the starting sequence."}}}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "ImagingSelection", "type": "object", "description": "A selection of DICOM SOP instances and/or frames within a single Study and Series, including identifiers, status, subject, performer, and more specific attributes related to imaging selection.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"ImagingSelection.identifier": {"type": "string", "description": "A unique identifier assigned to this imaging selection."}, "ImagingSelection.status": {"type": "string", "description": "The current state of the ImagingSelection resource."}, "ImagingSelection.subject": {"type": "string", "description": "The patient, or group of patients, location, device, organization, procedure or practitioner this imaging selection is about."}, "ImagingSelection.issued": {"type": "string", "description": "The date and time this imaging selection was created."}, "ImagingSelection.performer": {"type": "object", "description": "Selector of the instances \u2013 human or machine.", "properties": {"ImagingSelection.performer.function": {"type": "string", "description": "Distinguishes the type of involvement of the performer."}, "ImagingSelection.performer.actor": {"type": "string", "description": "Author \u2013 human or machine."}}}, "ImagingSelection.basedOn": {"type": "string", "description": "A list of the diagnostic requests that resulted in this imaging selection being performed."}, "ImagingSelection.category": {"type": "string", "description": "Classifies the imaging selection."}, "ImagingSelection.code": {"type": "string", "description": "Reason for referencing the selected content."}, "ImagingSelection.studyUid": {"type": "string", "description": "The Study Instance UID for the DICOM Study from which the images were selected."}, "ImagingSelection.derivedFrom": {"type": "string", "description": "The imaging study from which the imaging selection is made."}, "ImagingSelection.endpoint": {"type": "string", "description": "The network service providing retrieval access to the selected images, frames, etc."}, "ImagingSelection.seriesUid": {"type": "string", "description": "The Series Instance UID for the DICOM Series from which the images were selected."}, "ImagingSelection.seriesNumber": {"type": "integer", "description": "The Series Number for the DICOM Series from which the images were selected."}, "ImagingSelection.frameOfReferenceUid": {"type": "string", "description": "The Frame of Reference UID identifying the coordinate system that conveys spatial and/or temporal information for the selected images or frames."}, "ImagingSelection.bodySite": {"type": "string", "description": "The anatomic structures examined."}, "ImagingSelection.focus": {"type": "string", "description": "The actual focus of an observation when it is not the patient of record."}, "ImagingSelection.instance": {"type": "object", "description": "Each imaging selection includes one or more selected DICOM SOP instances.", "properties": {"ImagingSelection.instance.uid": {"type": "string", "description": "The SOP Instance UID for the selected DICOM instance."}, "ImagingSelection.instance.number": {"type": "integer", "description": "The Instance Number for the selected DICOM instance."}, "ImagingSelection.instance.sopClass": {"type": "string", "description": "The SOP Class UID for the selected DICOM instance."}, "ImagingSelection.instance.subset": {"type": "string", "description": "Selected subset of the SOP Instance."}, "ImagingSelection.instance.imageRegion2D": {"type": "object", "description": "A specific 2D region in a DICOM image/frame.", "properties": {"ImagingSelection.instance.imageRegion2D.regionType": {"type": "string", "description": "Specifies the type of image region."}, "ImagingSelection.instance.imageRegion2D.coordinate": {"type": "array", "items": {"type": "number"}, "description": "The coordinates describing the image region."}}}, "ImagingSelection.instance.imageRegion3D": {"type": "object", "description": "A specific 3D region in a DICOM frame of reference.", "properties": {"ImagingSelection.instance.imageRegion3D.regionType": {"type": "string", "description": "Specifies the type of image region."}, "ImagingSelection.instance.imageRegion3D.coordinate": {"type": "array", "items": {"type": "number"}, "description": "The coordinates describing the image region."}}}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "QuestionnaireResponse", "type": "object", "description": "Representation of a structured set of questions and their answers, including details such as identifiers, status, subject, author, and nested group or question items.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"QuestionnaireResponse.identifier": {"type": "string", "description": "Business identifiers assigned to this questionnaire response by the performer and/or other systems."}, "QuestionnaireResponse.basedOn": {"type": "string", "description": "A plan, proposal, or order that is fulfilled in whole or in part by this questionnaire response."}, "QuestionnaireResponse.partOf": {"type": "string", "description": "A procedure or observation that this questionnaire was performed as part of the execution of."}, "QuestionnaireResponse.questionnaire": {"type": "string", "description": "The Questionnaire that defines and organizes the questions for which answers are being provided."}, "QuestionnaireResponse.status": {"type": "string", "description": "The current state of the questionnaire response."}, "QuestionnaireResponse.subject": {"type": "string", "description": "The subject of the questionnaire response. This could be a patient, organization, practitioner, device, etc."}, "QuestionnaireResponse.encounter": {"type": "string", "description": "The Encounter during which this questionnaire response was created or to which the creation of this record is tightly associated."}, "QuestionnaireResponse.authored": {"type": "string", "description": "The date and/or time that this questionnaire response was last modified by the user."}, "QuestionnaireResponse.author": {"type": "string", "description": "The individual or device that received the answers to the questions in the QuestionnaireResponse and recorded them in the system."}, "QuestionnaireResponse.source": {"type": "string", "description": "The individual or device that answered the questions about the subject."}, "QuestionnaireResponse.item": {"type": "object", "description": "A group or question item from the original questionnaire for which answers are provided.", "properties": {"QuestionnaireResponse.item.linkId": {"type": "string", "description": "The item from the Questionnaire that corresponds to this item in the QuestionnaireResponse resource."}, "QuestionnaireResponse.item.definition": {"type": "string", "description": "A reference to an ElementDefinition that provides the details for the item."}, "QuestionnaireResponse.item.text": {"type": "string", "description": "Text that is displayed above the contents of the group or as the text of the question being answered."}, "QuestionnaireResponse.item.answer": {"type": "object", "description": "The respondent's answer(s) to the question.", "properties": {"QuestionnaireResponse.item.answer.value[x]": {"type": "string", "description": "The answer (or one of the answers) provided by the respondent to the question."}, "QuestionnaireResponse.item.answer.item": {"type": "object", "description": "Nested groups and/or questions found within this particular answer."}}}, "QuestionnaireResponse.item.item": {"type": "object", "description": "Sub-questions, sub-groups or display items nested beneath a group."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "GenomicStudy", "type": "object", "description": "A GenomicStudy is a set of analyses performed to analyze and generate genomic data, including identifiers, status, subject, encounter, and specific analysis details.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"GenomicStudy.identifier": {"type": "string", "description": "Identifiers for this genomic study."}, "GenomicStudy.status": {"type": "string", "description": "The status of the genomic study."}, "GenomicStudy.type": {"type": "string", "description": "The type of the study (e.g., Familial variant segregation, Functional variation detection, or Gene expression profiling)."}, "GenomicStudy.subject": {"type": "string", "description": "The primary subject of the genomic study."}, "GenomicStudy.encounter": {"type": "string", "description": "The healthcare event with which this genomics study is associated."}, "GenomicStudy.startDate": {"type": "string", "description": "When the genomic study was started."}, "GenomicStudy.basedOn": {"type": "string", "description": "Event resources that the genomic study is based on."}, "GenomicStudy.referrer": {"type": "string", "description": "Healthcare professional who requested or referred the genomic study."}, "GenomicStudy.interpreter": {"type": "string", "description": "Healthcare professionals who interpreted the genomic study."}, "GenomicStudy.reason": {"type": "string", "description": "Why the genomic study was performed."}, "GenomicStudy.instantiatesCanonical": {"type": "string", "description": "The defined protocol that describes the study."}, "GenomicStudy.instantiatesUri": {"type": "string", "description": "The URL pointing to an externally maintained protocol that describes the study."}, "GenomicStudy.note": {"type": "string", "description": "Comments related to the genomic study."}, "GenomicStudy.description": {"type": "string", "description": "Description of the genomic study."}, "GenomicStudy.analysis": {"type": "object", "description": "The details about a specific analysis that was performed in this GenomicStudy.", "properties": {"GenomicStudy.analysis.identifier": {"type": "string", "description": "Identifiers for the analysis event."}, "GenomicStudy.analysis.methodType": {"type": "string", "description": "Type of the methods used in the analysis (e.g., FISH, Karyotyping, MSI)."}, "GenomicStudy.analysis.changeType": {"type": "string", "description": "Type of the genomic changes studied in the analysis (e.g., DNA, RNA, or AA change)."}, "GenomicStudy.analysis.genomeBuild": {"type": "string", "description": "The reference genome build that is used in this analysis."}, "GenomicStudy.analysis.instantiatesCanonical": {"type": "string", "description": "The defined protocol that describes the analysis."}, "GenomicStudy.analysis.instantiatesUri": {"type": "string", "description": "The URL pointing to an externally maintained protocol that describes the analysis."}, "GenomicStudy.analysis.title": {"type": "string", "description": "Name of the analysis event (human friendly)."}, "GenomicStudy.analysis.focus": {"type": "string", "description": "What the genomic analysis is about, when it is not about the subject of record."}, "GenomicStudy.analysis.specimen": {"type": "string", "description": "The specimen used in the analysis event."}, "GenomicStudy.analysis.date": {"type": "string", "description": "The date of the analysis event."}, "GenomicStudy.analysis.note": {"type": "string", "description": "Any notes captured with the analysis event."}, "GenomicStudy.analysis.protocolPerformed": {"type": "string", "description": "The protocol that was performed for the analysis event."}, "GenomicStudy.analysis.regionsStudied": {"type": "string", "description": "The genomic regions to be studied in the analysis (BED file)."}, "GenomicStudy.analysis.regionsCalled": {"type": "string", "description": "Genomic regions actually called in the analysis event (BED file)."}, "GenomicStudy.analysis.input": {"type": "object", "description": "Inputs for the analysis event.", "properties": {"GenomicStudy.analysis.input.file": {"type": "string", "description": "File containing input data."}, "GenomicStudy.analysis.input.type": {"type": "string", "description": "Type of input data (e.g., BAM, CRAM, or FASTA)."}, "GenomicStudy.analysis.input.generatedBy[x]": {"type": "string", "description": "The analysis event or other GenomicStudy that generated this input file."}}}, "GenomicStudy.analysis.output": {"type": "object", "description": "Outputs for the analysis event.", "properties": {"GenomicStudy.analysis.output.file": {"type": "string", "description": "File containing output data."}, "GenomicStudy.analysis.output.type": {"type": "string", "description": "Type of output data (e.g., VCF, MAF, or BAM)."}}}, "GenomicStudy.analysis.performer": {"type": "object", "description": "Performer for the analysis event.", "properties": {"GenomicStudy.analysis.performer.actor": {"type": "string", "description": "The organization, healthcare professional, or others who participated in performing this analysis."}, "GenomicStudy.analysis.performer.role": {"type": "string", "description": "Role of the actor for this analysis."}}}, "GenomicStudy.analysis.device": {"type": "object", "description": "Devices used for the analysis (e.g., instruments, software), with settings and parameters.", "properties": {"GenomicStudy.analysis.device.device": {"type": "string", "description": "Device used for the analysis."}, "GenomicStudy.analysis.device.function": {"type": "string", "description": "Specific function for the device used for the analysis."}}}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "AllergyIntolerance", "type": "object", "description": "A selection of FHIR attributes from AllergyIntolerance resources, including identifiers, clinical status, verification status, and more specific attributes related to allergies.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"AllergyIntolerance.identifier": {"type": "array", "items": {"type": "object", "properties": {"type": {"type": "string", "description": "Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server."}}}, "description": "External ids for this item"}, "AllergyIntolerance.clinicalStatus": {"type": "object", "properties": {"type": {"type": "string", "description": "The clinical status of the allergy or intolerance"}}}, "AllergyIntolerance.verificationStatus": {"type": "object", "properties": {"type": {"type": "string", "description": "Assertion about certainty associated with the propensity or potential risk of a reaction to the identified substance"}}}, "AllergyIntolerance.type": {"type": "object", "properties": {"type": {"type": "string", "description": "Identification of the underlying physiological mechanism for the reaction risk."}}}, "AllergyIntolerance.category": {"type": "array", "items": {"type": "string"}, "description": "Category of the identified substance"}, "AllergyIntolerance.criticality": {"type": "string", "description": "Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance."}, "AllergyIntolerance.code": {"type": "object", "properties": {"type": {"type": "string", "description": "Code for an allergy or intolerance statement."}}}, "AllergyIntolerance.patient": {"type": "object", "properties": {"type": {"type": "string", "description": "The patient who has the allergy or intolerance."}}}, "AllergyIntolerance.encounter": {"type": "object", "properties": {"type": {"type": "string", "description": "The encounter when the allergy or intolerance was asserted."}}}, "AllergyIntolerance.onset[x]": {"type": "object", "properties": {"type": {"type": "string", "description": "Estimated or actual date, date-time, or age when allergy or intolerance was identified."}}}, "AllergyIntolerance.recordedDate": {"type": "string", "description": "The recorded date represents when this particular AllergyIntolerance record was created in the system."}, "AllergyIntolerance.participant": {"type": "array", "items": {"type": "object", "properties": {"AllergyIntolerance.participant.function": {"type": "object", "properties": {"type": {"type": "string", "description": "Distinguishes the type of involvement of the actor in the activities related to the allergy or intolerance."}}}, "AllergyIntolerance.participant.actor": {"type": "object", "properties": {"type": {"type": "string", "description": "Indicates who or what participated in the activities related to the allergy or intolerance."}}}}}, "description": "Who or what participated in the activities related to the allergy or intolerance and how they were involved"}, "AllergyIntolerance.lastOccurrence": {"type": "string", "description": "Represents the date and/or time of the last known occurrence of a reaction event."}, "AllergyIntolerance.note": {"type": "array", "items": {"type": "object", "properties": {"type": {"type": "string", "description": "Additional narrative about the propensity for the Adverse Reaction, not captured in other fields."}}}, "description": "Additional text not captured in other fields"}, "AllergyIntolerance.reaction": {"type": "array", "items": {"type": "object", "properties": {"AllergyIntolerance.reaction.substance": {"type": "object", "properties": {"type": {"type": "string", "description": "Identification of the specific substance considered to be responsible for the Adverse Reaction event."}}}, "AllergyIntolerance.reaction.manifestation": {"type": "array", "items": {"type": "object", "properties": {"type": {"type": "string", "description": "Clinical symptoms and/or signs that are observed or associated with the adverse reaction event."}}}}, "AllergyIntolerance.reaction.description": {"type": "string", "description": "Text description about the reaction as a whole, including details of the manifestation if required."}, "AllergyIntolerance.reaction.onset": {"type": "string", "description": "Record of the date and/or time of the onset of the Reaction."}, "AllergyIntolerance.reaction.severity": {"type": "string", "description": "Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations."}, "AllergyIntolerance.reaction.exposureRoute": {"type": "object", "properties": {"type": {"type": "string", "description": "Identification of the route by which the subject was exposed to the substance."}}}, "AllergyIntolerance.reaction.note": {"type": "array", "items": {"type": "object", "properties": {"type": {"type": "string", "description": "Additional text about the adverse reaction event not captured in other fields."}}}}}}, "description": "Details about each adverse reaction event linked to exposure to the identified substance."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "FamilyMemberHistory", "type": "object", "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient, including identifiers, status, relationship, conditions, and procedures.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"FamilyMemberHistory.identifier": {"type": "string", "description": "Business identifiers assigned to this family member history by the performer or other systems."}, "FamilyMemberHistory.instantiatesCanonical": {"type": "string", "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory."}, "FamilyMemberHistory.instantiatesUri": {"type": "string", "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory."}, "FamilyMemberHistory.status": {"type": "string", "description": "A code specifying the status of the record of the family history of a specific family member."}, "FamilyMemberHistory.dataAbsentReason": {"type": "string", "description": "Describes why the family member's history is not available."}, "FamilyMemberHistory.patient": {"type": "string", "description": "The person who this history concerns."}, "FamilyMemberHistory.date": {"type": "string", "description": "The date (and possibly time) when the family member history was recorded or last updated."}, "FamilyMemberHistory.participant": {"type": "object", "description": "Indicates who or what participated in the activities related to the family member history and how they were involved.", "properties": {"FamilyMemberHistory.participant.function": {"type": "string", "description": "Distinguishes the type of involvement of the actor in the activities related to the family member history."}, "FamilyMemberHistory.participant.actor": {"type": "string", "description": "Indicates who or what participated in the activities related to the family member history."}}}, "FamilyMemberHistory.name": {"type": "string", "description": "This will either be a name or a description; e.g. 'Aunt Susan', 'my cousin with the red hair'."}, "FamilyMemberHistory.relationship": {"type": "string", "description": "The type of relationship this person has to the patient (father, mother, brother etc.)."}, "FamilyMemberHistory.sex": {"type": "string", "description": "The birth sex of the family member."}, "FamilyMemberHistory.born[x]": {"type": "string", "description": "The actual or approximate date of birth of the relative."}, "FamilyMemberHistory.age[x]": {"type": "string", "description": "The age of the relative at the time the family member history is recorded."}, "FamilyMemberHistory.estimatedAge": {"type": "boolean", "description": "If true, indicates that the age value specified is an estimated value."}, "FamilyMemberHistory.deceased[x]": {"type": "string", "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."}, "FamilyMemberHistory.reason": {"type": "string", "description": "Describes why the family member history occurred in coded or textual form."}, "FamilyMemberHistory.note": {"type": "string", "description": "A non condition-specific note to be made about the related person."}, "FamilyMemberHistory.condition": {"type": "object", "description": "The significant conditions that the family member had.", "properties": {"FamilyMemberHistory.condition.code": {"type": "string", "description": "The actual condition specified. Could be a coded condition or a less specific string like 'cancer'."}, "FamilyMemberHistory.condition.outcome": {"type": "string", "description": "Indicates what happened following the condition."}, "FamilyMemberHistory.condition.contributedToDeath": {"type": "boolean", "description": "This condition contributed to the cause of death of the related person."}, "FamilyMemberHistory.condition.onset[x]": {"type": "string", "description": "Either the age of onset, range of approximate age or descriptive string can be recorded."}, "FamilyMemberHistory.condition.note": {"type": "string", "description": "An area where general notes can be placed about this specific condition."}}}, "FamilyMemberHistory.procedure": {"type": "object", "description": "The significant procedures that the family member had.", "properties": {"FamilyMemberHistory.procedure.code": {"type": "string", "description": "The actual procedure specified. Could be a coded procedure or a less specific string."}, "FamilyMemberHistory.procedure.outcome": {"type": "string", "description": "Indicates what happened following the procedure."}, "FamilyMemberHistory.procedure.contributedToDeath": {"type": "boolean", "description": "This procedure contributed to the cause of death of the related person."}, "FamilyMemberHistory.procedure.performed[x]": {"type": "string", "description": "Estimated or actual date, date-time, period, or age when the procedure was performed."}, "FamilyMemberHistory.procedure.note": {"type": "string", "description": "An area where general notes can be placed about this specific procedure."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "ClinicalImpression", "type": "object", "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient, including identifiers, status, subject, findings, and more specific attributes related to clinical impressions.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"ClinicalImpression.identifier": {"type": "string", "description": "Business identifiers assigned to this clinical impression by the performer or other systems."}, "ClinicalImpression.status": {"type": "string", "description": "Identifies the workflow status of the assessment."}, "ClinicalImpression.statusReason": {"type": "string", "description": "Captures the reason for the current state of the ClinicalImpression."}, "ClinicalImpression.description": {"type": "string", "description": "A summary of the context and/or cause of the assessment - why / where it was performed, and what patient events/status prompted it."}, "ClinicalImpression.subject": {"type": "string", "description": "The patient or group of individuals assessed as part of this record."}, "ClinicalImpression.encounter": {"type": "string", "description": "The Encounter during which this ClinicalImpression was created or to which the creation of this record is tightly associated."}, "ClinicalImpression.effective[x]": {"type": "string", "description": "The point in time or period over which the subject was assessed."}, "ClinicalImpression.date": {"type": "string", "description": "Indicates when the documentation of the assessment was complete."}, "ClinicalImpression.performer": {"type": "string", "description": "The clinician performing the assessment."}, "ClinicalImpression.previous": {"type": "string", "description": "A reference to the last assessment that was conducted on this patient."}, "ClinicalImpression.problem": {"type": "array", "items": {"type": "string"}, "description": "A list of the relevant problems/conditions for a patient."}, "ClinicalImpression.changePattern": {"type": "string", "description": "Change in the status/pattern of a subject's condition since previously assessed, such as worsening, improving, or no change."}, "ClinicalImpression.protocol": {"type": "string", "description": "Reference to a specific published clinical protocol that was followed during this assessment."}, "ClinicalImpression.summary": {"type": "string", "description": "A text summary of the investigations and the diagnosis."}, "ClinicalImpression.finding": {"type": "object", "description": "Specific findings or diagnoses that were considered likely or relevant to ongoing treatment.", "properties": {"ClinicalImpression.finding.item": {"type": "string", "description": "Specific text, code or reference for finding or diagnosis, which may include ruled-out or resolved conditions."}, "ClinicalImpression.finding.basis": {"type": "string", "description": "Which investigations support finding or diagnosis."}}}, "ClinicalImpression.prognosiscode": {"type": "array", "items": {"type": "string"}, "description": "Estimate of likely outcome."}, "ClinicalImpression.prognosisReference": {"type": "array", "items": {"type": "string"}, "description": "RiskAssessment expressing likely outcome."}, "ClinicalImpression.supportingInfo": {"type": "array", "items": {"type": "string"}, "description": "Information supporting the clinical impression, which can contain investigation results."}, "ClinicalImpression.note": {"type": "string", "description": "Commentary about the impression, typically recorded after the impression itself was made."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "DetectedIssue", "type": "object", "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient, including identifiers, status, severity, implicated resources, and mitigation actions.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"DetectedIssue.identifier": {"type": "string", "description": "Business identifier associated with the detected issue record."}, "DetectedIssue.status": {"type": "string", "description": "Indicates the status of the detected issue."}, "DetectedIssue.category": {"type": "array", "items": {"type": "string"}, "description": "A code that classifies the general type of detected issue."}, "DetectedIssue.code": {"type": "string", "description": "Identifies the specific type of issue identified."}, "DetectedIssue.severity": {"type": "string", "description": "Indicates the degree of importance associated with the identified issue based on the potential impact on the patient."}, "DetectedIssue.subject": {"type": "string", "description": "Indicates the subject whose record the detected issue is associated with."}, "DetectedIssue.encounter": {"type": "string", "description": "The encounter during which this issue was detected."}, "DetectedIssue.identified[x]": {"type": "string", "description": "The date or period when the detected issue was initially identified."}, "DetectedIssue.author": {"type": "string", "description": "Individual or device responsible for the issue being raised."}, "DetectedIssue.implicated": {"type": "array", "items": {"type": "string"}, "description": "Indicates the resource representing the current activity or proposed activity that is potentially problematic."}, "DetectedIssue.evidence": {"type": "object", "description": "Supporting evidence or manifestations that provide the basis for identifying the detected issue.", "properties": {"DetectedIssue.evidence.code": {"type": "string", "description": "A manifestation that led to the recording of this detected issue."}, "DetectedIssue.evidence.detail": {"type": "array", "items": {"type": "string"}, "description": "Links to resources that constitute evidence for the detected issue."}}}, "DetectedIssue.detail": {"type": "string", "description": "A textual explanation of the detected issue."}, "DetectedIssue.reference": {"type": "string", "description": "The literature, knowledge-base or similar reference that describes the propensity for the detected issue identified."}, "DetectedIssue.mitigation": {"type": "object", "description": "Indicates an action that has been taken or is committed to reduce or eliminate the likelihood of the risk identified by the detected issue from manifesting.", "properties": {"DetectedIssue.mitigation.action": {"type": "string", "description": "Describes the action that was taken or the observation that was made that reduces/eliminates the risk associated with the identified issue."}, "DetectedIssue.mitigation.date": {"type": "string", "description": "Indicates when the mitigating action was documented."}, "DetectedIssue.mitigation.author": {"type": "string", "description": "Identifies the practitioner who determined the mitigation and takes responsibility for the mitigation step occurring."}, "DetectedIssue.mitigation.note": {"type": "string", "description": "Clinicians may add additional notes or justifications about the mitigation action."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "MedicationStatement", "type": "object", "description": "A record of a medication that is being consumed by a patient, including identifiers, status, adherence, dosage, and related information.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"MedicationStatement.identifier": {"type": "string", "description": "Identifiers associated with this Medication Statement."}, "MedicationStatement.partOf": {"type": "string", "description": "A larger event of which this particular MedicationStatement is a component or step."}, "MedicationStatement.status": {"type": "string", "description": "A code representing the status of recording the medication statement."}, "MedicationStatement.category": {"type": "array", "items": {"type": "string"}, "description": "Type of medication statement."}, "MedicationStatement.medication": {"type": "string", "description": "Identifies the medication being administered."}, "MedicationStatement.subject": {"type": "string", "description": "The person, animal or group who is/was taking the medication."}, "MedicationStatement.encounter": {"type": "string", "description": "The encounter that establishes the context for this MedicationStatement."}, "MedicationStatement.effective[x]": {"type": "string", "description": "The interval of time during which it is being asserted that the patient is/was/will be taking the medication."}, "MedicationStatement.dateAsserted": {"type": "string", "description": "The date when the Medication Statement was asserted by the information source."}, "MedicationStatement.informationSource": {"type": "string", "description": "The person or organization that provided the information about the taking of this medication."}, "MedicationStatement.derivedFrom": {"type": "string", "description": "Allows linking the MedicationStatement to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationStatement."}, "MedicationStatement.reason": {"type": "string", "description": "A concept, Condition or observation that supports why the medication is being/was taken."}, "MedicationStatement.note": {"type": "string", "description": "Provides extra information about the Medication Statement that is not conveyed by the other attributes."}, "MedicationStatement.relatedClinicalInformation": {"type": "string", "description": "Link to information that is relevant to a medication statement."}, "MedicationStatement.renderedDosageInstruction": {"type": "string", "description": "The full representation of the dose of the medication included in all dosage instructions."}, "MedicationStatement.dosage": {"type": "string", "description": "Indicates how the medication is/was or should be taken by the patient."}, "MedicationStatement.adherence": {"type": "object", "description": "Indicates whether the medication is or is not being consumed or administered.", "properties": {"MedicationStatement.adherence.code": {"type": "string", "description": "Type of the adherence for the medication."}, "MedicationStatement.adherence.reason": {"type": "string", "description": "Captures the reason for the current use or adherence of a medication."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "MedicationKnowledge", "type": "object", "description": "Information about a medication that is used to support knowledge.", "properties": {"fhir_attributes": {"type": "object", "properties": {"MedicationKnowledge.identifier": {"type": "array", "items": {"type": "string", "description": "Business identifier for this medication."}}, "MedicationKnowledge.code": {"type": "string", "description": "A code that specifies this medication, or a textual description if no code is available."}, "MedicationKnowledge.status": {"type": "string", "description": "A code to indicate if the medication is in active use. Values: active, entered-in-error, inactive."}, "MedicationKnowledge.author": {"type": "string", "description": "The creator or owner of the knowledge or information about the medication."}, "MedicationKnowledge.intendedJurisdiction": {"type": "array", "items": {"type": "string", "description": "Lists the jurisdictions that this medication knowledge was written for."}}, "MedicationKnowledge.name": {"type": "array", "items": {"type": "string", "description": "All of the names for a medication, e.g., acetaminophen, paracetamol."}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Immunization", "type": "object", "description": "Describes the event of a patient being administered a vaccine or a record of an immunization, including identifiers, status, vaccine information, performer, and related details.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Immunization.identifier": {"type": "string", "description": "A unique identifier assigned to this immunization record."}, "Immunization.basedOn": {"type": "string", "description": "A plan, order or recommendation fulfilled in whole or in part by this immunization."}, "Immunization.status": {"type": "string", "description": "Indicates the current status of the immunization event."}, "Immunization.statusReason": {"type": "string", "description": "Indicates the reason the immunization event was not performed."}, "Immunization.vaccineCode": {"type": "string", "description": "Vaccine that was administered or was to be administered."}, "Immunization.administeredProduct": {"type": "string", "description": "An indication of which product was administered to the patient."}, "Immunization.manufacturer": {"type": "string", "description": "Name of vaccine manufacturer."}, "Immunization.lotNumber": {"type": "string", "description": "Lot number of the vaccine product."}, "Immunization.expirationDate": {"type": "string", "description": "Date vaccine batch expires."}, "Immunization.patient": {"type": "string", "description": "The patient who either received or did not receive the immunization."}, "Immunization.encounter": {"type": "string", "description": "The visit or admission or other contact between patient and health care provider the immunization was performed as part of."}, "Immunization.supportingInformation": {"type": "string", "description": "Additional information that is relevant to the immunization."}, "Immunization.occurrence[x]": {"type": "string", "description": "Date vaccine administered or was to be administered."}, "Immunization.primarySource": {"type": "boolean", "description": "Indicates whether the data contained in the resource was captured by the individual/organization responsible for the administration of the vaccine."}, "Immunization.informationSource": {"type": "string", "description": "Typically the source of the data when the report of the immunization event is not based on information from the person who administered the vaccine."}, "Immunization.location": {"type": "string", "description": "The service delivery location where the vaccine administration occurred."}, "Immunization.site": {"type": "string", "description": "Body site where vaccine was administered."}, "Immunization.route": {"type": "string", "description": "The path by which the vaccine product is taken into the body."}, "Immunization.doseQuantity": {"type": "string", "description": "The quantity of vaccine product that was administered."}, "Immunization.performer": {"type": "object", "description": "Indicates who performed the immunization event.", "properties": {"Immunization.performer.function": {"type": "string", "description": "Describes the type of performance (e.g. ordering provider, administering provider, etc.)."}, "Immunization.performer.actor": {"type": "string", "description": "The practitioner or organization who performed the action."}}}, "Immunization.note": {"type": "string", "description": "Extra information about the immunization that is not conveyed by the other attributes."}, "Immunization.reason": {"type": "string", "description": "Describes why the immunization occurred in coded or textual form."}, "Immunization.isSubpotent": {"type": "boolean", "description": "Indication if a dose is considered to be subpotent."}, "Immunization.subpotentReason": {"type": "string", "description": "Reason why a dose is considered to be subpotent."}, "Immunization.programEligibility": {"type": "string", "description": "Indicates a patient's eligibility for a funding program."}, "Immunization.fundingSource": {"type": "string", "description": "Indicates the source of the vaccine actually administered."}, "Immunization.reaction": {"type": "object", "description": "Categorical data indicating that an adverse event is associated in time to an immunization.", "properties": {"Immunization.reaction.date": {"type": "string", "description": "Date of reaction to the immunization."}, "Immunization.reaction.manifestation": {"type": "string", "description": "Details of the reaction."}, "Immunization.reaction.reported": {"type": "boolean", "description": "Self-reported indicator."}}}, "Immunization.protocolApplied": {"type": "object", "description": "The protocol (set of recommendations) being followed by the provider who administered the dose.", "properties": {"Immunization.protocolApplied.series": {"type": "string", "description": "One possible path to achieve presumed immunity against a disease."}, "Immunization.protocolApplied.authority": {"type": "string", "description": "Indicates the authority who published the protocol that is being followed."}, "Immunization.protocolApplied.targetDisease": {"type": "string", "description": "The vaccine preventable disease the dose is being administered against."}, "Immunization.protocolApplied.doseNumber": {"type": "string", "description": "Nominal position in a series as intended by the practitioner administering the dose."}, "Immunization.protocolApplied.seriesDoses": {"type": "string", "description": "The recommended number of doses to achieve immunity as intended by the practitioner administering the dose."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "ImmunizationEvaluation", "type": "object", "description": "Describes a comparison of an immunization event against published recommendations to determine if the administration is valid in relation to those recommendations, including identifiers, status, evaluation details, and related information.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"ImmunizationEvaluation.identifier": {"type": "string", "description": "A unique identifier assigned to this immunization evaluation record."}, "ImmunizationEvaluation.status": {"type": "string", "description": "Indicates the current status of the evaluation of the vaccination administration event."}, "ImmunizationEvaluation.patient": {"type": "string", "description": "The individual for whom the evaluation is being done."}, "ImmunizationEvaluation.date": {"type": "string", "description": "The date the evaluation of the vaccine administration event was performed."}, "ImmunizationEvaluation.authority": {"type": "string", "description": "Indicates the authority who published the protocol (e.g. ACIP)."}, "ImmunizationEvaluation.targetDisease": {"type": "string", "description": "The vaccine preventable disease the dose is being evaluated against."}, "ImmunizationEvaluation.immunizationEvent": {"type": "string", "description": "The vaccine administration event being evaluated."}, "ImmunizationEvaluation.doseStatus": {"type": "string", "description": "Indicates if the dose is valid or not valid with respect to the published recommendations."}, "ImmunizationEvaluation.doseStatusReason": {"type": "string", "description": "Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations."}, "ImmunizationEvaluation.description": {"type": "string", "description": "Additional information about the evaluation."}, "ImmunizationEvaluation.series": {"type": "string", "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority."}, "ImmunizationEvaluation.doseNumber": {"type": "string", "description": "Nominal position in a series as determined by the outcome of the evaluation process."}, "ImmunizationEvaluation.seriesDoses": {"type": "string", "description": "The recommended number of doses to achieve immunity as determined by the outcome of the evaluation process."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "ImmunizationRecommendation", "type": "object", "description": "A patient's point-in-time set of immunization recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"ImmunizationRecommendation.identifier": {"type": "string", "description": "A unique identifier assigned to this particular recommendation record."}, "ImmunizationRecommendation.patient": {"type": "string", "description": "The patient the recommendation(s) are for."}, "ImmunizationRecommendation.date": {"type": "string", "format": "date-time", "description": "The date the immunization recommendation(s) were created."}, "ImmunizationRecommendation.authority": {"type": "string", "description": "Indicates the authority who published the protocol (e.g. ACIP)."}, "ImmunizationRecommendation.recommendation": {"type": "array", "description": "Vaccine administration recommendations.", "items": {"type": "object", "properties": {"vaccineCode": {"type": "array", "items": {"type": "string"}, "description": "Vaccine(s) or vaccine group that pertain to the recommendation."}, "targetDisease": {"type": "array", "items": {"type": "string"}, "description": "The targeted disease for the recommendation."}, "contraindicatedVaccineCode": {"type": "array", "items": {"type": "string"}, "description": "Vaccine(s) which should not be used to fulfill the recommendation."}, "forecastStatus": {"type": "string", "description": "Indicates the patient status with respect to the path to immunity for the target disease."}, "forecastReason": {"type": "array", "items": {"type": "string"}, "description": "The reason for the assigned forecast status."}, "dateCriterion": {"type": "array", "description": "Vaccine date recommendations. For example, earliest date to administer, latest date to administer, etc.", "items": {"type": "object", "properties": {"code": {"type": "string", "description": "Date classification of recommendation. For example, earliest date to give, latest date to give, etc."}, "value": {"type": "string", "format": "date-time", "description": "The date whose meaning is specified by dateCriterion.code."}}}}, "description": {"type": "string", "description": "Contains the description about the protocol under which the vaccine was administered."}, "series": {"type": "string", "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority."}, "doseNumber": {"type": "string", "description": "Nominal position of the recommended dose in a series as determined by the evaluation and forecasting process."}, "seriesDoses": {"type": "string", "description": "The recommended number of doses to achieve immunity as determined by the evaluation and forecasting process."}, "supportingImmunization": {"type": "array", "items": {"type": "string"}, "description": "Immunization event history and/or evaluation that supports the status and recommendation."}, "supportingPatientInformation": {"type": "array", "items": {"type": "string"}, "description": "Patient Information that supports the status and recommendation. This includes patient observations, adverse reactions and allergy/intolerance information."}}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "FormularyItem", "type": "object", "description": "This resource describes a product or service that is available through a program and includes the conditions and constraints of availability. All of the information in this resource is specific to the inclusion of the item in the formulary and is not inherent to the item itself.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"FormularyItem.identifier": {"type": "string", "description": "Business identifier for this formulary item."}, "FormularyItem.code": {"type": "string", "description": "A code (or set of codes) that specify the product or service that is identified by this formulary item."}, "FormularyItem.status": {"type": "string", "description": "The validity about the information of the formulary item and not of the underlying product or service itself."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "CarePlan", "type": "object", "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group, or community for a period of time, possibly limited to care for a specific condition or set of conditions.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"CarePlan.identifier": {"type": "array", "items": {"type": "string", "description": "Business identifiers assigned to this care plan by the performer or other systems."}}, "CarePlan.instantiatesCanonical": {"type": "array", "items": {"type": "string", "description": "The URL pointing to a FHIR-defined protocol, guideline, or other definition adhered to in whole or in part by this CarePlan."}}, "CarePlan.instantiatesUri": {"type": "array", "items": {"type": "string", "description": "The URL pointing to an externally maintained protocol or guideline adhered to by this CarePlan."}}, "CarePlan.basedOn": {"type": "array", "items": {"type": "string", "description": "A higher-level request resource that is fulfilled in whole or in part by this care plan."}}, "CarePlan.replaces": {"type": "array", "items": {"type": "string", "description": "Completed or terminated care plan whose function is taken by this new care plan."}}, "CarePlan.partOf": {"type": "array", "items": {"type": "string", "description": "A larger care plan of which this particular care plan is a component or step."}}, "CarePlan.status": {"type": "string", "description": "Indicates whether the plan is currently being acted upon, represents future intentions, or is now a historical record."}, "CarePlan.intent": {"type": "string", "description": "Indicates the level of authority/intentionality associated with the care plan and where it fits into the workflow chain."}, "CarePlan.category": {"type": "array", "items": {"type": "string", "description": "Identifies what \"kind\" of plan this is to support differentiation between multiple co-existing plans."}}, "CarePlan.title": {"type": "string", "description": "Human-friendly name for the care plan."}, "CarePlan.description": {"type": "string", "description": "A description of the scope and nature of the plan."}, "CarePlan.subject": {"type": "string", "description": "Identifies the patient or group whose intended care is described by the plan."}, "CarePlan.encounter": {"type": "string", "description": "The Encounter during which this CarePlan was created or to which the creation of this record is tightly associated."}, "CarePlan.period": {"type": "object", "description": "Indicates when the plan did (or is intended to) come into effect and end."}, "CarePlan.created": {"type": "string", "format": "date-time", "description": "Represents when this particular CarePlan record was created in the system."}, "CarePlan.custodian": {"type": "string", "description": "When populated, the custodian is responsible for the care plan."}, "CarePlan.contributor": {"type": "array", "items": {"type": "string", "description": "Identifies the individual(s), organization, or device who provided the contents of the care plan."}}, "CarePlan.careTeam": {"type": "array", "items": {"type": "string", "description": "Identifies all people and organizations expected to be involved in the care envisioned by this plan."}}, "CarePlan.addresses": {"type": "array", "items": {"type": "string", "description": "Identifies the conditions/problems/concerns/diagnoses/etc. managed by this plan."}}, "CarePlan.supportingInfo": {"type": "array", "items": {"type": "string", "description": "Identifies portions of the patient's record that influenced the formation of the plan."}}, "CarePlan.goal": {"type": "array", "items": {"type": "string", "description": "Describes the intended objective(s) of carrying out the care plan."}}, "CarePlan.activity": {"type": "array", "items": {"type": "object", "properties": {"CarePlan.performedActivity": {"type": "array", "items": {"type": "string", "description": "Identifies the activity that was performed."}}, "CarePlan.progress": {"type": "array", "items": {"type": "string", "description": "Notes about the adherence/status/progress of the activity."}}, "CarePlan.plannedActivityReference": {"type": "string", "description": "The details of the proposed activity represented in a specific resource."}}}}, "CarePlan.note": {"type": "array", "items": {"type": "string", "description": "General notes about the care plan not covered elsewhere."}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "CareTeam", "type": "object", "description": "The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"CareTeam.identifier": {"type": "string", "description": "Business identifiers assigned to this care team by the performer or other systems which remain constant as the resource is updated and propagates from server to server."}, "CareTeam.status": {"type": "string", "description": "Indicates the current state of the care team. Values: proposed | active | suspended | inactive | entered-in-error."}, "CareTeam.category": {"type": "string", "description": "Identifies what kind of team. Differentiates multiple co-existing teams, such as care plan team, episode of care team, longitudinal care team."}, "CareTeam.name": {"type": "string", "description": "A label for human use intended to distinguish like teams (e.g., 'red' vs. 'green' trauma teams)."}, "CareTeam.subject": {"type": "string", "description": "Identifies the patient or group whose intended care is handled by the team. Reference to a Patient or Group."}, "CareTeam.period": {"type": "string", "description": "Indicates when the team did (or is intended to) come into effect and end."}, "CareTeam.participant": {"type": "object", "description": "Identifies all people and organizations who are expected to be involved in the care team.", "properties": {"CareTeam.participant.role": {"type": "string", "description": "Indicates specific responsibility of an individual within the care team (e.g., 'Primary care physician', 'Caregiver')."}, "CareTeam.participant.member": {"type": "string", "description": "The specific person or organization who is participating/expected to participate in the care team. Reference to Practitioner, PractitionerRole, RelatedPerson, Patient, Organization, or CareTeam."}, "CareTeam.participant.onBehalfOf": {"type": "string", "description": "The organization of the practitioner. Reference to an Organization."}, "CareTeam.participant.coverage": {"type": "string", "description": "When the member is generally available within this care team. Type: Period or Timing."}}}, "CareTeam.reason": {"type": "string", "description": "Describes why the care team exists. CodeableReference to a Condition."}, "CareTeam.managingOrganization": {"type": "string", "description": "The organization responsible for the care team. Reference to an Organization."}, "CareTeam.telecom": {"type": "string", "description": "A central contact detail for the care team (that applies to all members). ContactPoint."}, "CareTeam.note": {"type": "string", "description": "Comments made about the CareTeam. Annotation."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "Goal", "type": "object", "description": "Describes the intended objective(s) for a patient, group, or organization care.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"Goal.identifier": {"type": "string", "description": "Business identifiers assigned to this goal by the performer or other systems which remain constant as the resource is updated and propagates from server to server."}, "Goal.lifecycleStatus": {"type": "string", "description": "The state of the goal throughout its lifecycle. Values: proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected."}, "Goal.achievementStatus": {"type": "string", "description": "Describes the progression, or lack thereof, towards the goal against the target. Values: in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable."}, "Goal.category": {"type": "string", "description": "Indicates a category the goal falls within. E.g. Treatment, dietary, behavioral, etc."}, "Goal.continuous": {"type": "boolean", "description": "After meeting the goal, ongoing activity is needed to sustain the goal objective."}, "Goal.priority": {"type": "string", "description": "Identifies the mutually agreed level of importance associated with reaching/sustaining the goal. Values: high-priority | medium-priority | low-priority."}, "Goal.description": {"type": "string", "description": "Human-readable and/or coded description of a specific desired objective of care, such as 'control blood pressure'."}, "Goal.subject": {"type": "string", "description": "Identifies the patient, group, or organization for whom the goal is being established. Reference to Patient, Group, or Organization."}, "Goal.start": {"type": "string", "description": "The date or event after which the goal should begin being pursued. Type: date or code."}, "Goal.target": {"type": "object", "description": "Indicates what should be done by when.", "properties": {"Goal.target.measure": {"type": "string", "description": "The parameter whose value is being tracked, e.g. body weight, blood pressure."}, "Goal.target.detail": {"type": "string", "description": "The target value of the focus to be achieved, e.g. 150 pounds, 7.0%. Type: Quantity, Range, code, string, boolean, integer, or Ratio."}, "Goal.target.due": {"type": "string", "description": "Indicates either the date or the duration after start by which the goal should be met. Type: date or Duration."}}}, "Goal.statusDate": {"type": "string", "description": "Identifies when the current status took effect."}, "Goal.statusReason": {"type": "string", "description": "Captures the reason for the current status."}, "Goal.source": {"type": "string", "description": "Indicates whose goal this is - patient goal, practitioner goal, etc. Reference to Patient, Practitioner, PractitionerRole, RelatedPerson, or CareTeam."}, "Goal.addresses": {"type": "string", "description": "The identified conditions and other health record elements that are intended to be addressed by the goal. Reference to Condition, Observation, MedicationStatement, MedicationRequest, NutritionOrder, ServiceRequest, RiskAssessment, or Procedure."}, "Goal.note": {"type": "string", "description": "Any comments related to the goal. Annotation."}, "Goal.outcome": {"type": "string", "description": "Identifies the change (or lack of change) at the point when the status of the goal is assessed. CodeableReference to Observation."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "ServiceRequest", "type": "object", "description": "A record of a request for a service such as diagnostic investigations, treatments, or operations to be performed.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"ServiceRequest.identifier": {"type": "string", "description": "Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller."}, "ServiceRequest.instantiatesCanonical": {"type": "string", "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this ServiceRequest."}, "ServiceRequest.instantiatesUri": {"type": "string", "description": "The URL pointing to an externally maintained protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this ServiceRequest."}, "ServiceRequest.basedOn": {"type": "string", "description": "Plan/proposal/order fulfilled by this request."}, "ServiceRequest.replaces": {"type": "string", "description": "The request takes the place of the referenced completed or terminated request(s)."}, "ServiceRequest.requisition": {"type": "string", "description": "A shared identifier common to all service requests authorized simultaneously by a single author."}, "ServiceRequest.status": {"type": "string", "description": "The status of the order. Values: draft | active | on-hold | revoked | completed | entered-in-error | unknown."}, "ServiceRequest.intent": {"type": "string", "description": "Whether the request is a proposal, plan, an original order, or a reflex order. Values: proposal | plan | directive | order."}, "ServiceRequest.category": {"type": "string", "description": "A code that classifies the service for searching, sorting, and display purposes (e.g. 'Surgical Procedure')."}, "ServiceRequest.priority": {"type": "string", "description": "Indicates how quickly the ServiceRequest should be addressed with respect to other requests. Values: routine | urgent | asap | stat."}, "ServiceRequest.doNotPerform": {"type": "boolean", "description": "Set this to true if the record is saying that the service/procedure should NOT be performed."}, "ServiceRequest.code": {"type": "string", "description": "A code or reference that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that has been requested."}, "ServiceRequest.orderDetail": {"type": "object", "description": "Additional details and instructions about how the services are to be delivered.", "properties": {"ServiceRequest.orderDetail.parameterFocus": {"type": "string", "description": "The context of the order details by reference."}, "ServiceRequest.orderDetail.parameter": {"type": "string", "description": "The parameter details for the service being requested."}, "ServiceRequest.orderDetail.parameter.code": {"type": "string", "description": "A value representing the additional detail or instructions for the order."}, "ServiceRequest.orderDetail.parameter.value": {"type": "string", "description": "Indicates a value for the order detail."}}}, "ServiceRequest.quantity": {"type": "string", "description": "An amount of service being requested which can be a quantity, ratio, or range."}, "ServiceRequest.subject": {"type": "string", "description": "On whom or what the service is to be performed. Reference to Patient, Group, Location, or Device."}, "ServiceRequest.focus": {"type": "string", "description": "The actual focus of a service request when it is not the subject of record."}, "ServiceRequest.encounter": {"type": "string", "description": "An encounter that provides additional information about the healthcare context in which this request is made."}, "ServiceRequest.occurrence": {"type": "string", "description": "The date/time at which the requested service should occur."}, "ServiceRequest.asNeeded": {"type": "string", "description": "Indicates pre-condition for performing the service. Type: boolean or code."}, "ServiceRequest.authoredOn": {"type": "string", "description": "When the request transitioned to being actionable."}, "ServiceRequest.requester": {"type": "string", "description": "The individual who initiated the request and has responsibility for its activation. Reference to Practitioner, PractitionerRole, Organization, Patient, RelatedPerson, or Device."}, "ServiceRequest.performerType": {"type": "string", "description": "Desired type of performer for doing the requested service."}, "ServiceRequest.performer": {"type": "string", "description": "The desired performer for doing the requested service."}, "ServiceRequest.location": {"type": "string", "description": "The preferred location(s) where the procedure should actually happen in coded or free text form."}, "ServiceRequest.reason": {"type": "string", "description": "An explanation or justification for why this service is being requested."}, "ServiceRequest.insurance": {"type": "string", "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service."}, "ServiceRequest.supportingInfo": {"type": "string", "description": "Additional clinical information about the patient or specimen that may influence the services or their interpretations."}, "ServiceRequest.specimen": {"type": "string", "description": "One or more specimens that the laboratory procedure will use."}, "ServiceRequest.bodySite": {"type": "string", "description": "Anatomic location where the procedure should be performed."}, "ServiceRequest.bodyStructure": {"type": "string", "description": "Anatomic location where the procedure should be performed using BodyStructure reference."}, "ServiceRequest.note": {"type": "string", "description": "Any other notes and comments made about the service request."}, "ServiceRequest.patientInstruction": {"type": "string", "description": "Instructions in terms that are understood by the patient or consumer."}, "ServiceRequest.relevantHistory": {"type": "string", "description": "Key events in the history of the request."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "NutritionOrder", "type": "object", "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"NutritionOrder.identifier": {"type": "string", "description": "Identifiers assigned to this order by the order sender or by the order receiver."}, "NutritionOrder.instantiatesCanonical": {"type": "string", "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this NutritionOrder."}, "NutritionOrder.instantiatesUri": {"type": "string", "description": "The URL pointing to an externally maintained protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this NutritionOrder."}, "NutritionOrder.instantiates": {"type": "string", "description": "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."}, "NutritionOrder.basedOn": {"type": "string", "description": "A plan or request that is fulfilled in whole or in part by this nutrition order."}, "NutritionOrder.groupIdentifier": {"type": "string", "description": "A shared identifier common to all nutrition orders that were authorized more or less simultaneously by a single author, representing the composite or group identifier."}, "NutritionOrder.status": {"type": "string", "description": "The workflow status of the nutrition order/request. Values: draft | active | on-hold | revoked | completed | entered-in-error | unknown."}, "NutritionOrder.intent": {"type": "string", "description": "Indicates the level of authority/intentionality associated with the NutritionOrder and where the request fits into the workflow chain. Values: proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option."}, "NutritionOrder.priority": {"type": "string", "description": "Indicates how quickly the Nutrition Order should be addressed with respect to other requests. Values: routine | urgent | asap | stat."}, "NutritionOrder.subject": {"type": "string", "description": "The person or set of individuals who needs the nutrition order for an oral diet, nutritional supplement and/or enteral or formula feeding."}, "NutritionOrder.encounter": {"type": "string", "description": "An encounter that provides additional information about the healthcare context in which this request is made."}, "NutritionOrder.supportingInformation": {"type": "string", "description": "Information to support fulfilling (i.e. dispensing or administering) of the nutrition, for example, patient height and weight."}, "NutritionOrder.dateTime": {"type": "string", "description": "The date and time that this nutrition order was requested."}, "NutritionOrder.orderer": {"type": "string", "description": "The practitioner that holds legal responsibility for ordering the diet, nutritional supplement, or formula feedings."}, "NutritionOrder.performer": {"type": "string", "description": "The specified desired performer of the nutrition order."}, "NutritionOrder.allergyIntolerance": {"type": "string", "description": "A link to a record of allergies or intolerances which should be included in the nutrition order."}, "NutritionOrder.foodPreferenceModifier": {"type": "string", "description": "Order-specific modifier about the type of food that should be given, such as Halal, Vegan or Kosher."}, "NutritionOrder.excludeFoodModifier": {"type": "string", "description": "Order-specific modifier about the type of oral food or oral fluids that should not be given, such as No Red Meat, No Soy or No Wheat or Gluten-Free."}, "NutritionOrder.outsideFoodAllowed": {"type": "boolean", "description": "Indicates whether a food item is allowed to be brought in by the patient and/or family."}, "NutritionOrder.oralDiet": {"type": "string", "description": "Diet given orally in contrast to enteral (tube) feeding."}, "NutritionOrder.supplement": {"type": "string", "description": "Oral nutritional products given to add further nutritional value to the patient's diet."}, "NutritionOrder.enteralFormula": {"type": "string", "description": "Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity."}, "NutritionOrder.note": {"type": "string", "description": "Comments made about the NutritionOrder by the requester, performer, subject or other participants."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "NutritionIntake", "type": "object", "description": "A record of food or fluid that is being consumed by a patient.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"NutritionIntake.identifier": {"type": "string", "description": "Identifiers associated with this Nutrition Intake that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate."}, "NutritionIntake.instantiatesCanonical": {"type": "string", "description": "Instantiates FHIR protocol or definition."}, "NutritionIntake.instantiatesUri": {"type": "string", "description": "Instantiates external protocol or definition."}, "NutritionIntake.basedOn": {"type": "string", "description": "A plan, proposal or order that is fulfilled in whole or in part by this event."}, "NutritionIntake.partOf": {"type": "string", "description": "A larger event of which this particular event is a component or step."}, "NutritionIntake.status": {"type": "string", "description": "A code representing the patient or other source's judgment about the state of the intake that this assertion is about. Values: preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown."}, "NutritionIntake.statusReason": {"type": "string", "description": "Captures the reason for the current state of the NutritionIntake."}, "NutritionIntake.code": {"type": "string", "description": "Overall type of nutrition intake."}, "NutritionIntake.subject": {"type": "string", "description": "The person, animal or group who is/was consuming the food or fluid."}, "NutritionIntake.encounter": {"type": "string", "description": "The encounter that establishes the context for this NutritionIntake."}, "NutritionIntake.occurrence[x]": {"type": "string", "description": "The interval of time during which it is being asserted that the patient is/was consuming the food or fluid."}, "NutritionIntake.recorded": {"type": "string", "description": "The date when the Nutrition Intake was asserted by the information source."}, "NutritionIntake.reported[x]": {"type": "string", "description": "The person or organization that provided the information about the consumption of this food or fluid."}, "NutritionIntake.consumedItem": {"type": "object", "description": "What food or fluid product or item was consumed.", "properties": {"type": {"type": "string", "description": "Indicates what a category of item that was consumed: e.g., food, fluid, enteral, etc."}, "NutritionIntake.consumedItem.nutritionProduct": {"type": "string", "description": "Identifies the food or fluid product that was consumed."}, "NutritionIntake.consumedItem.schedule": {"type": "string", "description": "Scheduled frequency of consumption."}, "NutritionIntake.consumedItem.amount": {"type": "string", "description": "Quantity of the specified food."}, "NutritionIntake.consumedItem.rate": {"type": "string", "description": "Rate at which enteral feeding was administered."}, "NutritionIntake.consumedItem.notConsumed": {"type": "boolean", "description": "Indicator when a patient is in a setting where it is helpful to know if food was not consumed."}, "notConsumedReason": {"type": "string", "description": "Document the reason the food or fluid was not consumed."}}}, "NutritionIntake.ingredientLabel": {"type": "object", "description": "Total nutrient amounts for the whole meal, product, serving, etc.", "properties": {"NutritionIntake.ingredientLabel.nutrient": {"type": "string", "description": "Total nutrient consumed. This could be a macronutrient (protein, fat, carbohydrate), or a vitamin and mineral."}, "NutritionIntake.ingredientLabel.amount": {"type": "string", "description": "Total amount of nutrient consumed."}}}, "NutritionIntake.performer": {"type": "object", "description": "Who performed the intake and how they were involved.", "properties": {"NutritionIntake.performer.function": {"type": "string", "description": "Type of performer."}, "NutritionIntake.performer.actor": {"type": "string", "description": "Who performed the intake."}}}, "NutritionIntake.location": {"type": "string", "description": "Where the intake occurred."}, "NutritionIntake.derivedFrom": {"type": "string", "description": "Allows linking the NutritionIntake to the underlying NutritionOrder, or to other information, such as AllergyIntolerance, that supports or is used to derive the NutritionIntake."}, "NutritionIntake.reason": {"type": "string", "description": "A reason, Condition or observation for why the food or fluid is/was consumed."}, "NutritionIntake.note": {"type": "string", "description": "Provides extra information about the Nutrition Intake that is not conveyed by the other attributes."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "VisionPrescription", "type": "object", "description": "An authorization for the provision of glasses and/or contact lenses to a patient.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"VisionPrescription.identifier": {"type": "string", "description": "A unique identifier assigned to this vision prescription."}, "VisionPrescription.status": {"type": "string", "description": "The status of the resource instance. Values: active | cancelled | draft | entered-in-error."}, "VisionPrescription.created": {"type": "string", "description": "The date this resource was created."}, "VisionPrescription.patient": {"type": "string", "description": "A resource reference to the person to whom the vision prescription applies."}, "VisionPrescription.encounter": {"type": "string", "description": "A reference to a resource that identifies the particular occurrence of contact between patient and healthcare provider during which the prescription was issued."}, "VisionPrescription.dateWritten": {"type": "string", "description": "The date (and perhaps time) when the prescription was written."}, "VisionPrescription.prescriber": {"type": "string", "description": "The healthcare professional responsible for authorizing the prescription."}, "VisionPrescription.lensSpecification": {"type": "object", "description": "Contain the details of the individual lens specifications and serves as the authorization for fulfillment by certified professionals.", "properties": {"VisionPrescription.lensSpecification.product": {"type": "string", "description": "Identifies the type of vision correction product which is required for the patient."}, "VisionPrescription.lensSpecification.eye": {"type": "string", "description": "The eye for which the lens specification applies. Values: right | left."}, "VisionPrescription.lensSpecification.sphere": {"type": "number", "description": "Lens power measured in dioptres (0.25 units)."}, "VisionPrescription.lensSpecification.cylinder": {"type": "number", "description": "Power adjustment for astigmatism measured in dioptres (0.25 units)."}, "VisionPrescription.lensSpecification.axis": {"type": "integer", "description": "Adjustment for astigmatism measured in integer degrees."}, "VisionPrescription.lensSpecification.prism": {"type": "object", "description": "Allows for adjustment on two axis.", "properties": {"VisionPrescription.lensSpecification.prism.amount": {"type": "number", "description": "Amount of prism to compensate for eye alignment in fractional units."}, "VisionPrescription.lensSpecification.prism.base": {"type": "string", "description": "The relative base, or reference lens edge, for the prism. Values: up | down | in | out."}}}, "VisionPrescription.lensSpecification.add": {"type": "number", "description": "Power adjustment for multifocal lenses measured in dioptres (0.25 units)."}, "VisionPrescription.lensSpecification.power": {"type": "number", "description": "Contact lens power measured in dioptres (0.25 units)."}, "VisionPrescription.lensSpecification.backCurve": {"type": "number", "description": "Back curvature measured in millimetres."}, "VisionPrescription.lensSpecification.diameter": {"type": "number", "description": "Contact lens diameter measured in millimetres."}, "VisionPrescription.lensSpecification.duration": {"type": "string", "description": "The recommended maximum wear period for the lens."}, "VisionPrescription.lensSpecification.color": {"type": "string", "description": "Special color or pattern."}, "VisionPrescription.lensSpecification.brand": {"type": "string", "description": "Brand recommendations or restrictions."}, "VisionPrescription.lensSpecification.note": {"type": "string", "description": "Notes for special requirements such as coatings and lens materials."}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "RiskAssessment", "type": "object", "description": "An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"RiskAssessment.identifier": {"type": "string", "description": "Business identifier assigned to the risk assessment."}, "RiskAssessment.basedOn": {"type": "string", "description": "A reference to the request that is fulfilled by this risk assessment."}, "RiskAssessment.parent": {"type": "string", "description": "A reference to a resource that this risk assessment is part of, such as a Procedure."}, "RiskAssessment.status": {"type": "string", "description": "The status of the RiskAssessment. Values: registered | preliminary | final | amended."}, "RiskAssessment.method": {"type": "string", "description": "The algorithm, process or mechanism used to evaluate the risk."}, "RiskAssessment.code": {"type": "string", "description": "The type of the risk assessment performed."}, "RiskAssessment.subject": {"type": "string", "description": "The patient or group the risk assessment applies to."}, "RiskAssessment.encounter": {"type": "string", "description": "The encounter where the assessment was performed."}, "RiskAssessment.occurrence[x]": {"type": "string", "description": "The date (and possibly time) the risk assessment was performed."}, "RiskAssessment.condition": {"type": "string", "description": "For assessments or prognosis specific to a particular condition, indicates the condition being assessed."}, "RiskAssessment.performer": {"type": "string", "description": "The provider, patient, related person, or software application that performed the assessment."}, "RiskAssessment.reason": {"type": "string", "description": "The reason the risk assessment was performed."}, "RiskAssessment.basis": {"type": "string", "description": "Indicates the source data considered as part of the assessment."}, "RiskAssessment.prediction": {"type": "object", "description": "Describes the expected outcome for the subject.", "properties": {"RiskAssessment.prediction.outcome": {"type": "string", "description": "One of the potential outcomes for the patient (e.g. remission, death, a particular condition)."}, "RiskAssessment.prediction.probability[x]": {"type": "string", "description": "Indicates how likely the outcome is (in the specified timeframe)."}, "RiskAssessment.prediction.qualitativeRisk": {"type": "string", "description": "Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high)."}, "RiskAssessment.prediction.relativeRisk": {"type": "number", "description": "Indicates the risk for this particular subject divided by the risk of the population in general."}, "RiskAssessment.prediction.when[x]": {"type": "string", "description": "Indicates the period of time or age range of the subject to which the specified probability applies."}, "RiskAssessment.prediction.rationale": {"type": "string", "description": "Additional information explaining the basis for the prediction."}}}, "RiskAssessment.mitigation": {"type": "string", "description": "A description of the steps that might be taken to reduce the identified risk(s)."}, "RiskAssessment.note": {"type": "string", "description": "Additional comments about the risk assessment."}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
{"$schema": "http://json-schema.org/draft-07/schema#", "title": "RequestOrchestration", "type": "object", "description": "A set of related requests that can be used to capture intended activities that have inter-dependencies such as 'give this medication after that one'.", "properties": {"mappings": {"type": "array", "items": {"type": "object", "properties": {"fhir_attributes": {"type": "object", "properties": {"RequestOrchestration.identifier": {"type": "array", "items": {"type": "string", "description": "Business identifiers assigned to this request orchestration."}}, "RequestOrchestration.instantiatesCanonical": {"type": "array", "items": {"type": "string", "description": "A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition."}}, "RequestOrchestration.instantiatesUri": {"type": "array", "items": {"type": "string", "description": "A URL referencing an externally defined protocol or guideline."}}, "RequestOrchestration.basedOn": {"type": "array", "items": {"type": "string", "description": "A plan, proposal or order that is fulfilled in whole or in part by this request."}}, "RequestOrchestration.replaces": {"type": "array", "items": {"type": "string", "description": "Completed or terminated request(s) whose function is taken by this new request."}}, "RequestOrchestration.groupIdentifier": {"type": "string", "description": "A shared identifier common to multiple independent Request instances that were activated/authorized more or less simultaneously by a single author."}, "RequestOrchestration.status": {"type": "string", "description": "The current state of the request. Values: draft, active, on-hold, revoked, completed, entered-in-error, unknown."}, "RequestOrchestration.intent": {"type": "string", "description": "Indicates the level of authority/intentionality associated with the request."}, "RequestOrchestration.priority": {"type": "string", "description": "Indicates how quickly the request should be addressed."}, "RequestOrchestration.code": {"type": "string", "description": "A code that identifies what the overall request orchestration is."}, "RequestOrchestration.subject": {"type": "string", "description": "The subject for which the request orchestration was created."}, "RequestOrchestration.encounter": {"type": "string", "description": "Describes the context of the request orchestration, if any."}, "RequestOrchestration.authoredOn": {"type": "string", "format": "date-time", "description": "Indicates when the request orchestration was created."}, "RequestOrchestration.author": {"type": "string", "description": "Provides a reference to the author of the request orchestration."}, "RequestOrchestration.reason": {"type": "array", "items": {"type": "string", "description": "Describes the reason for the request orchestration in coded or textual form."}}, "RequestOrchestration.goal": {"type": "array", "items": {"type": "string", "description": "Goals that are intended to be achieved by following the requests in this RequestOrchestration."}}, "RequestOrchestration.note": {"type": "array", "items": {"type": "string", "description": "Provides a mechanism to communicate additional information about the response."}}, "RequestOrchestration.action": {"type": "array", "items": {"type": "object", "properties": {"linkId": {"type": "string", "description": "The linkId of the action from the PlanDefinition that corresponds to this action in the RequestOrchestration resource."}, "prefix": {"type": "string", "description": "A user-visible prefix for the action. For example a section or item numbering such as 1. or A."}, "title": {"type": "string", "description": "The title of the action displayed to a user."}, "description": {"type": "string", "description": "A short description of the action used to provide a summary to display to the user."}, "textEquivalent": {"type": "string", "description": "A text equivalent of the action to be performed."}, "priority": {"type": "string", "description": "Indicates how quickly the action should be addressed."}, "string": {"type": "array", "items": {"type": "string", "description": "A code that provides meaning for the action or action group."}}, "documentation": {"type": "array", "items": {"type": "string", "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient."}}, "goal": {"type": "array", "items": {"type": "string", "description": "Goals that are intended to be achieved by following the requests in this action."}}}}}}}, "table_attribute_name": {"type": "string", "description": "Represents the attribute's name in the input table."}}, "required": ["fhir_attributes", "table_attribute_name"]}}}, "required": ["mappings"]}
